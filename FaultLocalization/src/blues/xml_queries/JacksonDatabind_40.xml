<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_40" link="https://github.com/FasterXML/jackson-databind/issues/1095">
<buginformation>
<summary>prevent  coercion  from  empty  string</summary>
<description>got from the code below int mapper read value int class system out println seems that json number type cannot start with could make the code throw some exceptions the text was updated successfully but these errors were encountered copy link member cowtowncoder commented jan 2016 you would not want empty string coerced into missing value perhaps deserialization feature could added prevent this there may already exist issue for this copy link author yzmyyff commented jan 2016 tried add deserialization feature accept empty string null object mapper but still print object mapper mapper new object mapper mapper enable deserialization feature accept empty string null object mapper enable deserialization feature fail null for primitives int mapper read value int class system out println the right order mind empty json string json null json number primitive seems that these features don take effect the same time copy link member cowtowncoder commented jan 2016 yzmyyff correct the features question are handled separately should say coercion from empty string into scalars does not consider accept empty string null object scalars are not java objects confusing will think about this see adding checks you suggest the best way adding new deserialization feature have some concerns about backwards compatibility changing existing behavior but perhaps those are not valid cowtowncoder mentioned this issue jan 2016 add mapper feature allow coercion scalars for enabling disabling coercions 1106 closed copy link member cowtowncoder commented jan 2016 think this would make sense elaborated bit more 1106 copy link author yzmyyff commented jan 2016 thanks lot cowtowncoder changed the title deserialize empty string number prevent coercion int from empty string null deserialization feature fail null for primitives true jan 2016 cowtowncoder added this the milestone jan 2016 cowtowncoder closed this 21ca 921 jan 2016 copy link member cowtowncoder commented jan 2016 implemented for affects primitives but not equivalent wrappers per naming features copy link gkozyryatskyy commented mar 2017 edited what should want this integer mapper read value integer class system out println throw exception copy link member cowtowncoder commented mar 2017 was about say that works but then realized you are talking about wrapper object deserialization feature accept empty string null object the thing disable you not want such coercion handling has been rewritten for not yet released but available and this will work earlier versions had more limited support for some types not know offhand integer handling was working not copy link gkozyryatskyy commented mar 2017 edited cowtowncoder using and try with mapper configure deserialization feature accept empty string null object false and there exception empty string successfully parsed null integer long copy link member cowtowncoder commented mar 2017 gkozyryatskyy have look since this issue closed file new one cowtowncoder mentioned this issue mar 2017 deserialization feature accept empty string null object does not prevent coercion into integer 1588 closed copy link gkozyryatskyy commented mar 2017 cowtowncoder thx lot copy link member cowtowncoder commented mar 2017 actually misspoke here due backwards compatibility requirements deserialization feature accept empty string null object can not made apply scalar values feature defaults false yet behavior coercion enabled default 1106 will actually needed here feature added mapper feature allow coercion scalars and will included sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.NumberDeserializers</file>
</fixedfiles>
</bug>
</bugrepository>
