<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_59" link="https://github.com/FasterXML/jackson-databind/issues/1384">
<buginformation>
<summary>json deserialize key using  does  not  work  correctly  together  with default typing  non  final</summary>
<description>version seems ignore json deserialize key using when used together with default typing non final setting and map argument type constructor with concrete type hash map specified json the code below test fails fails and test succeeds passes fine the only difference test succeeds has module with deserializer registered explicitly both tests pass version package com test testjackson testjackson import com fasterxml jackson annotation json auto detect import com fasterxml jackson annotation json creator import com fasterxml jackson annotation json property import com fasterxml jackson core json generator import com fasterxml jackson core json parse exception import com fasterxml jackson databind deserialization context import com fasterxml jackson databind json mapping exception import com fasterxml jackson databind json serializer import com fasterxml jackson databind key deserializer import com fasterxml jackson databind object mapper import com fasterxml jackson databind object mapper default typing import com fasterxml jackson databind serializer provider import com fasterxml jackson databind annotation json deserialize import com fasterxml jackson databind annotation json serialize import com fasterxml jackson databind module simple key deserializers import com fasterxml jackson databind module simple module import java exception import java util map import org junit test import static com fasterxml jackson annotation json auto detect visibility any import static junit framework assert assert equals public class test jackson private static string test instance serialized map property java util hash map compound key value test public void test fails throws json parse exception json mapping exception exception object mapper mapper new object mapper enable default typing default typing non final test class test instance mapper read value test instance serialized test class class string test instance serialized mapper write value string test instance assert equals test instance serialized test instance serialized test public void test succeeds throws json parse exception json mapping exception exception object mapper mapper new object mapper enable default typing default typing non final register module new simple module private static final long serial version uid override public void setup module setup context context context add key deserializers new simple key deserializers add deserializer compound key class new compound key deserializer test class test instance mapper read value test instance serialized test class class string test instance serialized mapper write value string test instance assert equals test instance serialized test instance serialized json auto detect field visibility any public static final class test class json property map property json serialize key using compound key serializer class private final map compound key string map property json creator private test class json deserialize key using compound key deserializer class json property map property map compound key string map property this map property map property public static final class compound key private string part private string part public compound key string part string part this part part this part part public string get part return part public string get part return part public static class compound key deserializer extends key deserializer override public object deserialize key string deserialization context deserialization context string parts split return new compound key parts parts public static class compound key serializer extends json serializer compound key override public void serialize compound key compound key json generator json generator serializer provider serializer provider throws exception json generator write field name compound key get part compound key get part the text was updated successfully but these errors were encountered copy link member cowtowncoder commented sep 2016 just make sure understand ignored you mean that not using specified custom key deserializer but default one copy link author oleg zhukov commented sep 2016 edited yes the exception thrown says cannot find the map key deserializer com fasterxml jackson databind json mapping exception can not find map key deserializer for type simple type class com test testjackson testjackson test jackson compound key source map property java util hash map compound key value line column through reference chain com test testjackson testjackson test class map property com fasterxml jackson databind json mapping exception from json mapping exception java 261 com fasterxml jackson databind deserialization context report mapping exception deserialization context java 1234 com fasterxml jackson databind deser deserializer cache handle unknown key deserializer deserializer cache java 588 com fasterxml jackson databind deser deserializer cache find key deserializer deserializer cache java 168 com fasterxml jackson databind deserialization context find key deserializer deserialization context java 499 com fasterxml jackson databind deser std map deserializer create contextual map deserializer java 237 com fasterxml jackson databind deserialization context handle secondary contextualization deserialization context java 681 com fasterxml jackson databind deserialization context find contextual value deserializer deserialization context java 445 com fasterxml jackson databind jsontype impl type deserializer base find deserializer type deserializer base java 188 com fasterxml jackson databind jsontype impl array type deserializer deserialize array type deserializer java com fasterxml jackson databind jsontype impl array type deserializer deserialize typed from object array type deserializer java com fasterxml jackson databind deser std map deserializer deserialize with type map deserializer java 387 com fasterxml jackson databind deser settable bean property deserialize settable bean property java 497 com fasterxml jackson databind deser bean deserializer deserialize with error wrapping bean deserializer java 511 com fasterxml jackson databind deser bean deserializer deserialize using property based bean deserializer java 396 com fasterxml jackson databind deser bean deserializer base deserialize from object using non default bean deserializer base java 1196 com fasterxml jackson databind deser bean deserializer deserialize from object bean deserializer java 314 com fasterxml jackson databind deser bean deserializer deserialize bean deserializer java 148 com fasterxml jackson databind object mapper read map and close object mapper java 3789 com fasterxml jackson databind object mapper read value object mapper java 2833 com test testjackson testjackson test jackson test fails test jackson java omitted further stack frames copy link member cowtowncoder commented sep 2016 thank you for reporting this hope work this soon seems straight forward reproduce cowtowncoder added commit that referenced this issue sep 2016 try reproducing 1384 seems pass with loading status checks copy link member cowtowncoder commented sep 2016 edited looks like this only affects passes but not with interesting had bigger changes not much cowtowncoder modified the milestones sep 2016 cowtowncoder closed this 59194a sep 2016 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.JavaType</file>
<file>com.fasterxml.jackson.databind.type.CollectionLikeType</file>
<file>com.fasterxml.jackson.databind.type.MapLikeType</file>
<file>com.fasterxml.jackson.databind.type.TypeFactory</file>
</fixedfiles>
</bug>
</bugrepository>
