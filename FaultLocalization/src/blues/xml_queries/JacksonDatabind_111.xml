<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_111" link="https://github.com/FasterXML/jackson-databind/issues/2303">
<buginformation>
<summary>deserialize  null  when  java  type type ref type ref  does  not  provide  type  type  null</summary>
<description>dependency jackson compile com fasterxml jackson core jackson databind jackson short explanation kotlin got issue when deserialize the value the context reference type that include another reference type provide here reproduction scenario java based atomic reference don think there real use case that use integer but with kind dsl may happen have similar inclusion when deserialize get expected but when deserialize the null value get null instead null think there issues the get null method atomic reference always returns new atomic reference think should smarter and use contextual information such full type simply call value deserializer get null but value deserializer was null during tests because the bean property creator has distinct deserializer and null provider the case reference type deserializer new contextual deserializer created which able deserialize its content then the deserializer the bean property creator updated but not its null provider reproduce class bean private atomic reference atomic reference integer ref ref public atomic reference atomic reference integer get ref ref return ref ref public void set ref ref atomic reference atomic reference integer ref ref this ref ref ref ref test void test throws exception object mapper object mapper new object mapper object reader object reader object mapper reader for bean class bean int ref object reader read value ref ref assertions assert not null int ref ref ref succeeds assertions assert not null int ref ref ref get succeeds assertions assert equals int ref ref ref get get new integer succeeds bean null ref object reader read value ref ref null assertions assert not null int ref ref ref succeeds assertions assert not null int ref ref ref get fails assertions assert null int ref ref ref get get fails the text was updated successfully but these errors were encountered mcoolive changed the title null provider type ref type ref does not provide type type null apr 2019 mcoolive changed the title type ref type ref does not provide type type null deserialize null when java type type ref type ref does not provide type type null apr 2019 cowtowncoder added the label apr 2019 copy link member cowtowncoder commented apr 2019 thank you for reporting this providing excellent analysis likely cause think you are right both accounts this wip page https github com faster xml jackson future ideas wiki jackson work progress but may take while until get look into cowtowncoder added and removed labels may 2019 copy link member cowtowncoder commented may 2019 looking into this also targeting since think there non zero risk downside with any fix just because test coverage for the case obviously not there copy link member cowtowncoder commented may 2019 edited can reproduce the issue reported can see the npe now trying track down the path where there the discrepancy wrt value deserializer not getting passed not yet seeing settable bean property should copying null value provider all paths although there has been least one bug wrt copy constructors before anything that not tested possible copy link member cowtowncoder commented may 2019 hmmh can finally see where the deviation comes from value deserializer and null value provider are not kept sync both should remain same they were set the same originally cowtowncoder added and removed labels may 2019 cowtowncoder added this the milestone may 2019 copy link member cowtowncoder commented may 2019 found fix and think safe enough after all cowtowncoder closed this 36222e may 2019 copy link member cowtowncoder commented may 2019 will related question handling get empty value wonder should delegate get empty value similarly just use get null value result mcoolive interested your opinion you have one that copy link author mcoolive commented jul 2019 cowtowncoder sorry for the late answer would use get null value what you did correctly read your commit for information worked around the issue implementing custom deserializer get null value follow kotlin syntax override fun get null value ctxt deserialization context optional val referenced null value this full type referenced type let ctxt find root value deserializer let get null value ctxt return reference value referenced null value cowtowncoder think can provide default implementation get null value reference type deserializer here proposal override public get null value deserialization context ctxt return reference value value deserializer get null value ctxt would able simplify code later thank you for the fix copy link member cowtowncoder commented nov 2019 edited ugh this caused faster xml jackson modules java 154 for non nested case which not optimal either the only minor plus thing that glad did not this patch gut feeling was right that this pretty fragile area cowtowncoder mentioned this issue nov 2019 regression deserializing optional json node faster xml jackson modules java 154 open cowtowncoder removed the label mar 2020 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.CreatorProperty</file>
<file>com.fasterxml.jackson.databind.deser.impl.FieldProperty</file>
<file>com.fasterxml.jackson.databind.deser.impl.MethodProperty</file>
<file>com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty</file>
<file>com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty</file>
<file>com.fasterxml.jackson.databind.deser.impl.SetterlessProperty</file>
<file>com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
