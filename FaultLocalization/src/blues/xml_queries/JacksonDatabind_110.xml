<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_110" link="https://github.com/FasterXML/jackson-databind/issues/2265">
<buginformation>
<summary>inconsistent  handling  collections unmodifiable list  collections unmodifiable random access list</summary>
<description>edited sorry bring that one again but under the impression that the issue about unmodifiable collections 1880 still not solved completely fact the way the class unmodifiable list retrieved here yields collections unmodifiable random access list and therefore only this type currently supported jackson however using collections unmodifiable list list implementation that doesn implement random access will yield collections unmodifiable list instead which not deserialized properly and fails with com fasterxml jackson databind exc invalid definition exception cannot construct instance java util collections unmodifiable list creators like default constructor exist default arguments constructor found this can reproduced adding the following test case test default for util collections 1868 public void test unmodifiable non random access list throws exception verify collection collections unmodifiable list new linked list arrays list first second more generally for outside the project public void test unmodifiable non random access list throws exception collection exp collections unmodifiable list new linked list arrays list first second object mapper mapper new object mapper mapper enable default typing default typing non final json type info property string json mapper write value string exp collection act mapper read value json collection class assert equals exp act assert equals exp get class act get class currently java util collections unmodifiable list can only return these types unmodifiable lists believe safe for now just hardcode yet another special case for this class this can currently solved user side adding mixin but since collections unmodifiable random access list supported would find natural also support the non random access variant the text was updated successfully but these errors were encountered copy link member cowtowncoder commented feb 2019 what would help here the reproduction the problem can consider what anything feel that soon the main mechanism use remove any indication immutability all leads trouble since not detectable via public jdk api only causes problems with polymorphic handling and there probably should not supported either copy link author joffrey bion commented feb 2019 what would help here the reproduction the problem can consider what anything what you mean there test case reproduce the issue the description there something else that you need feel that soon the main mechanism use remove any indication immutability all leads trouble since not detectable via public jdk api only causes problems with polymorphic handling and there probably should not supported either agree that because not public api not really clean for jackson add special cases like that but pragmatically quite useful have this little help from jackson for such common types believe was not mistake include handling for these types the first place even not recommended general rely private copy link member cowtowncoder commented feb 2019 joffrey bion think skimmed the description too fast and missed the meat line test method sorry about that and thank you for providing all the information hope look into this soon added https github com faster xml jackson future ideas wiki jackson work progress where track short term work items cowtowncoder added the label mar 2019 cowtowncoder modified the milestones mar 2019 copy link member cowtowncoder commented mar 2019 joffrey bion thank you for reporting this issue fixed this for and thereby when released copy link author joffrey bion commented mar 2019 cowtowncoder thanks lot for looking into this and quickly fixing the issue cowtowncoder closed this 83264a mar 2019 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers</file>
</fixedfiles>
</bug>
</bugrepository>
