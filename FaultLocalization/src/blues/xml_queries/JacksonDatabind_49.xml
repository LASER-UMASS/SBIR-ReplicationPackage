<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_49" link="https://github.com/FasterXML/jackson-databind/issues/1255">
<buginformation>
<summary>json identity info  incorrectly  serializing  forward  references</summary>
<description>edited cowtowncoder wrote this small test program demonstrate the issue import com fasterxml jackson annotation json identity info import com fasterxml jackson annotation json identity reference import com fasterxml jackson annotation object generators import com fasterxml jackson databind object mapper public class object test public static class foo json identity reference always true public bar bar json identity reference public bar bar json identity info generator object generators int sequence generator class public static class bar public static void main string args throws exception object mapper mapper new object mapper create structure serialize foo new foo bar new bar bar bar serialize system out println mapper write value string when executing this test program the latest version the output will bar bar the second field will written with new even though both fields reference the same object because this writing forward references essentially impossible the issue seems the fact that bean serializer base will always call writable object generate the referenced object has not been written plain format yet https github com faster xml jackson databind blob master src main java com fasterxml jackson databind ser std bean serializer base java 600 this will also happen has been generated before might also smarter only generate new writable object generate that hasn happened before that method doesn have javadoc can tell how supposed work the text was updated successfully but these errors were encountered copy link member cowtowncoder commented may 2016 thank you for reporting this definitely sounds like bug will have dig deeper into this say more but what you can the meantime see how unit tests handle this case copy link contributor arifogel commented jun 2016 edited recently fixed this quietly for myself with the attached diff patch txt copy link member cowtowncoder commented jun 2016 arifogel thank you that looks very simple indeed have look make sure hope that the ticket cowtowncoder added this the milestone jun 2016 cowtowncoder closed this 644487b jun 2016 copy link member cowtowncoder commented jun 2016 arifogel thanks for your help modified slightly differently but the basic idea was sound fix will copy link contributor arifogel commented jun 2016 this patch opened new problem for and probably others when deserializing such structures forward references are only resolved when they are contained map collection via the catch unresolved forward reference blocks the corresponding deserializers otherwise the exception goes too far down and the resulting error incomprehensible have now patched this end attached likely that patch has performance impliciations should reviewed carefully patch txt copy link member cowtowncoder commented jun 2016 arifogel there way easily reproduce the issue love have unit test reproduce the problem and fix first copy link contributor arifogel commented jun 2016 the problem popped with some very complicated structures inside very complicated project making unit test from that would overkill you like can generate smaller unit test when have some free time perhaps this weekend 2016 tatu saloranta wrote arifogel https github com arifogel there way easily reproduce the issue love have unit test reproduce the problem and fix first you are receiving this because you were mentioned reply this email directly view git hub 1255 comment mute the thread https github com notifications unsubscribe ahys ary 2589 shjdbwzu zmfks rtga copy link contributor arifogel commented jun 2016 take back patch not fix though seems improve the situation before the patch running particular task results crash with not very useful information afterwards json that serialized deserialized and reserialized changes initial serialization resutls file txt subsequent deserialization and reserialization results file txt the code for these structures starts projects batfish common protocol src org batfish datamodel configuration java the batfish txt txt project github com arifogel batfish copy link contributor arifogel commented jun 2016 one thing notice here that forward references inside collections and maps are reserialized correctly while those that are fields are not copy link member cowtowncoder commented jun 2016 arifogel yes think that minimal just small practical test case would great don doubt existence the problem that propose fix could work either completely partially but would allow checking optimal placement handling also thought that bean properties for sure were properly handled wrt forward references can find original check but 610 fixing one aspect this could even regression some kind and perhaps would allow seeing what changed any rate test case would great whenever you get chance also think that earlier change should not have broken any existing working usage that creating new for same object would not make sense under any conditions best old behavior might have masked some real failure arifogel mentioned this issue jun 2016 json identity info deserialization fails with combination forward references json creator 1261 closed copy link contributor arifogel commented jun 2016 let continue this conversation bug 1261 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ser.impl.WritableObjectId</file>
</fixedfiles>
</bug>
</bugrepository>
