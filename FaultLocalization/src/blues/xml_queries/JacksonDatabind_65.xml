<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_65" link="https://github.com/FasterXML/jackson-databind/issues/1429">
<buginformation>
<summary>can  erroneously  use  static  factory  method  with  more  than  one  argument</summary>
<description>while investigating issue found that there was different behavior for normal deserializers and key deserializers where deserializing value field works expected but map key fails with not valid representation wrong number arguments basic example import com fasterxml jackson annotation import com fasterxml jackson core type type reference import com fasterxml jackson databind object mapper import org junit test import java exception import java util map import java util map entry import static org junit assert assert equals public class key field test test public void deserialize field throws exception field field new object mapper read value name first last field class assert equals field get name firstname first assert equals field get name lastname last test public void deserialize key throws exception map full name double map new object mapper read value first last new type reference map full name double fails with com fasterxml jackson databind exc invalid format exception can not construct map key type key field test full name from string first last not valid representation wrong number arguments source java string reader 7113b 13f line column entry full name double entry map entry set iterator next assert equals entry get key firstname first assert equals entry get key lastname last assert equals entry get value double value public static class field private final full name name public field json property name full name name name name public full name get name return name public static class full name private final string firstname private final string lastname private full name string firstname string lastname firstname firstname lastname lastname json creator public static full name value string value string split value split return new full name split split public static full name value string firstname string lastname return new full name firstname lastname json value override public string string return firstname lastname looks like this because basic bean descriptor find factory method has incorrect assumption about the contents class info get static methods which will have any method named value and static methods annotated with json creator override public method find factory method class exp arg types all single arg static methods for annotated method class info get static methods factory method and must take one expected arg types supertype class actual arg type get raw parameter type for class exp arg type exp arg types and one that matches what would pass actual arg type assignable from exp arg type return get annotated return null this can worked around annotating static factory methods not intended used json creators with json ignore due the resolution class info get static methods not really urgent please let know you have any questions about the issue thanks chris the text was updated successfully but these errors were encountered cowtowncoder added commit that referenced this issue oct 2016 add failing test for 1429 loading status checks 9257bd cowtowncoder changed the title std key deserializer can erroneously use static factory method with more than one argument std key deserializer can erroneously use static factory method with more than one argument oct 2016 cowtowncoder added this the milestone oct 2016 cowtowncoder closed this 66688 oct 2016 copy link author narbsy commented oct 2016 thank you for the quick response have lovely day copy link member cowtowncoder commented oct 2016 narbsy thank you for reporting this was edge case easy fix once known sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer</file>
<file>com.fasterxml.jackson.databind.introspect.BasicBeanDescription</file>
</fixedfiles>
</bug>
</bugrepository>
