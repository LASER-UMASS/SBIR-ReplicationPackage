<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_142" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-58.json">
<buginformation>
<summary>internet  explorer  runtime  error  after  compilation</summary>
<description>what  steps  will  reproduce  the  problem  see  attached  html  file  does  not  work  unless  compatibility  view  turned  for  some  reason  what  the  expected  output  what  you  see  instead  expected  output  the  left  hand  side  the  page  generated  the  raw  source  google  closure  output  the  right  hand  side  the  page  what  version  the  product  are  you  using  what  operating  system  downloaded  compiler  latest  zip  today  nov  2009  est  please  provide  any  additional  information  below  there  variable  called  quot  threshold  quot  which  used  generate  array  arrays  the  attached  html  file  small  number  seems  pass  arrays  into  the  sort  method  sorting  array  arrays  value  like  all  other  browsers  but  when  threshold  large  enough  machine  that  happens  around  250  starts  passing  the  arrays  value  google  closure  compiler  has  changed  original  source  from  making  local  copies  modifying  the  arguments  being  passed  into  the  sort  comparator  but  result  this  behavior  the  closure  compiled  code  breaks  after  looking  into  this  some  more  learned  that  arrays  are  always  passed  reference  but  that  only  means  you  can  change  attributes  and  individual  items  array  for  example  var  var  function  null  the  value  will  remain  but  instead  var  function  null  the  value  now  null  the  attached  example  the  google  closure  compiled  version  akin  the  function  above  which  means  that  the  value  the  arrays  should  not  changing  the  threshold  set  high  enough  however  they  indeed  change  the  original  report  may  not  accurate  but  this  real  issue  there  definitely  something  odd  occurring  here  running  under  the  debugger  with  reports  number  expected  adding  debug  writeln  blah  the  right  spot  and  the  problem  goes  away  var  test  function  var  aaaaaa  bbbbbb  function  for  var  push  return  sort  function upper case  debug  writeln  blah upper case  return  number inner html  typeof  join  update  summary  something  more  directly  related  did  some  research  this  issue  documented  here  http  www  zachleat  com  web  2010  array  sort  you  don  want  wait  for  the  compiler  fix  just  declare  the  variables  outside  the  sort  and  the  compiler  won  optimize  and  reuse  them  var  sort  function upper case  debug  writeln  blah upper case  return  number  wow  that  nice  find  can  imagine  what  could  possibly  doing  under  the  covers  that  would  lead  this  problem  one  possible  fix  would  never  coalesce  the  arguments  function  another  possible  fix  would  fix  array  prototype  sort  var old array sort  array  prototype  sort  array  prototype  sort  function  return old array sort  call  this  function  return  call  this  neither  really  satisfying  alan  what  you  think  perhaps  nocoalesce  doc  tag  fixed  171</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.CoalesceVariableNames</file>
<file>com.google.javascript.jscomp.parsing.JsDocInfoParser</file>
</fixedfiles>
</bug>
</bugrepository>
