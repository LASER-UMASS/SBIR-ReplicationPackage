<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Math_62" link="https://issues.apache.org/jira/browse/MATH-413">
<buginformation>
<summary>miscellaneous  issues  concerning  the  optimization  package</summary>
<description>revision  990792  contains  changes  triggered  the  following  issues  math  394  math  397  math  404  this  issue  collects  the  currently  still  unsatisfactory  code  not  necessarily  sorted  order  annoyance  brentoptimizer  specific  convergence  checker  must  used  levenbergmarquardtoptimizer  also  has  specific  convergence  checks  trying  make  convergence  checking  independent  the  optimization  algorithm  creates  problems  conceptual  and  practical  see  brentoptimizer  and  levenbergmarquardtoptimizer  the  algorithm  passes  points  the  convergence  checker  but  the  actual  meaning  the  points  can  very  well  different  the  caller  optimization  algorithm  and  the  callee  convergence  checker  powelloptimizer  the  line  search  brentoptimizer  tolerances  depend  the  tolerances  within  the  main  algorithm  since  tolerances  come  with  convergencechecker  and  can  changed  any  time  awkward  adapt  the  values  within  the  line  search  optimizer  without  exposing  its  internals  brentoptimizer  field  the  enclosing  class  powelloptimizer  given  the  numerous  changes  some  javadoc  comments  might  out  sync  although  did  try  update  them  all  class  directsearchoptimizer  package  optimization  direct  inherits  from  class  abstractscalaroptimizer  package  optimization  general  some  interfaces  are  defined  package  optimization  but  their  base  implementations  abstract  class  that  contain  the  boiler  plate  code  are  package  optimization  general  differentiablemultivariatevectorialoptimizer  and  baseabstractvectorialoptimizer  check  performed  ensure  the  the  convergence  checker  has  been  set  see  brentoptimizer  and  powelloptimizer  hasn  there  will  npe  the  alternative  initialize  default  checker  that  will  never  used  case  the  user  had  intended  explicitly  sets  the  checker  nonlinearconjugategradientoptimizer  ugly  workaround  for  the  checked  convergenceexception  everywhere  trail  the  checked  functionevaluationexception  although  never  used  there  remains  some  duplicate  code  such  the  multi  start  loop  the  various  multistart  implementations  the  convergencechecker  interface  very  general  the  converged  method  can  take  any  number  pointvaluepair  however  there  remains  semantic  problem  one  cannot  sure  that  the  list  points  means  the  same  thing  for  the  caller  converged  and  within  the  implementation  the  convergencechecker  that  was  independently  set  not  clear  whether  wise  aggregate  the  counter  gradient  evaluations  the  function  evaluation  counter  levenbergmarquartdoptimizer  for  example  would  unfair  currently  had  remove  all  tests  referring  gradient  and  jacobian  evaluations  abstractleastsquaresoptimizer  and  levenbergmarquardtoptimizer  occurences  optimizationexception  were  replaced  the  unchecked  convergenceexception  but  some  cases  might  not  the  most  appropriate  one  multistartunivariaterealoptimizer  the  other  classes  multistartmultivariate  similar  this  one  the  randomization  the  firts  guess  value  while  this  class  the  search  interval  think  that  here  also  should  randomly  choose  the  start  value  within  the  user  selected  interval  the  javadoc  utility  raises  warnings  see  output  mvn  site  which  couldn  figure  out  how  correct  some  previously  existing  classes  and  interfaces  have  become  more  than  specialisation  new  generics  classes  might  interesting  remove  them  order  reduce  the  number  classes  and  thus  limit  the  potential  for  confusion</description>
</buginformation>
<fixedfiles>
<file>org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer</file>
</fixedfiles>
</bug>
</bugrepository>
