<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_12" link="https://github.com/FasterXML/jackson-databind/issues/735">
<buginformation>
<summary>json deserialize  map  with content using  custom  deserializer  overwrites  default  behavior</summary>
<description>recently updated from version and encountered new issue with our custom deserializers they either seemed stop working were active the wrong fields could narrow down some change version still working for wrote test show this behavior seems appear when there two maps with the same key and value types bean and only one them has custom deserializer the deserializer then falsely used either for both none the maps this test works for version and fails with higher versions import static org junit assert assert equals import java exception import java util map import org junit test import com fasterxml jackson annotation json property import com fasterxml jackson core json parser import com fasterxml jackson core json processing exception import com fasterxml jackson databind deserialization context import com fasterxml jackson databind object mapper import com fasterxml jackson databind annotation json deserialize import com fasterxml jackson databind deser std std deserializer public class deserialize test test public void test throws exception object mapper new object mapper string json map map test bean bean read value json get bytes test bean class assert equals 100 bean get map get int value assert equals bean get map get int value public static class test bean json property map json deserialize content using custom deserializer class map string integer map json property map map string integer map public map string integer get map return map public void set map map string integer map this map map public map string integer get map return map public void set map map string integer map this map map public static class custom deserializer extends std deserializer integer public custom deserializer super integer class override public integer deserialize json parser deserialization context ctxt throws exception json processing exception integer value read value integer class return value 100 the text was updated successfully but these errors were encountered copy link member cowtowncoder commented mar 2015 that does not sound good looking first thought was this could due 604 fixed 635 but also fails this probably not the case thank you for reproduction will try figure out what causing the failure cowtowncoder added this the milestone mar 2015 copy link member cowtowncoder commented mar 2015 yes due 604 well looks like checks prevent incorrect caching were still not strict enough plus side easy fix will probably release micro patch just jackson databind soon and not release full set all other artifacts and this fix along with others will get when gets released cowtowncoder added commit that referenced this issue mar 2015 merge branch into plus related 735 follow regards 05db 853 additions conflicts release notes version src test java com fasterxml jackson databind deser test custom deserializers java cowtowncoder closed this 57c mar 2015 cowtowncoder modified the milestones mar 2015 copy link member cowtowncoder commented mar 2015 just released should available via maven hour note that only jackson databind released per above other components may and needs used copy link author blackfyre 512 commented mar 2015 thank you for the quick resultion copy link member cowtowncoder commented mar 2015 thank you for reporting this need bit more work ensure other cases are not affected since collection caching was also extended these are difficult ones trouble shoot but knowing the problem easier write proper tests now reproduction requires specific sequence resolution calls custom one first last this was referenced mar 2015 json type info non deterministically ignored 738 closed strange concurrency bug 709 closed cowtowncoder added commit that referenced this issue mar 2015 add improved test for 735 turns out there still least one 5642e ordering dependant issue cowtowncoder reopened this mar 2015 copy link member cowtowncoder commented mar 2015 after fixing part the problem which resolved the unit test failure added some more variants and found out that there another problematic sequence will try address that further whereas this only affects maps also affects collections since their cachability was enabled reopening for additional work cowtowncoder added commit that referenced this issue mar 2015 more complete fix for 735 7ff 745c copy link member cowtowncoder commented mar 2015 fixed completely far know for and cowtowncoder closed this mar 2015 alberto brigandi pushed commit indigo orchestrator that referenced this issue mar 2016 exclude provided jackson libraries wildfly 877e the jackson implementation provided wildfly the version this version the library afflicted this bug faster xml jackson databind 735 and loaded default need exclude winitzki mentioned this issue oct 2016 non cachable deserializers are still created single threaded way 1394 open sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.MapDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
