<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_83" link="https://github.com/FasterXML/jackson-databind/issues/1629">
<buginformation>
<summary>ignores  registered  for</summary>
<description>culprit appears lines 155 161 from string deserializer may 2016 tatu unlike most usage this seems legit json mapping exception ctxt weird string exception text value class msg cause null init cause cause throw nothing here yet fail anyway the above lines appear show that the exception will thrown regardless any problem handling logic test case import com fasterxml jackson databind deserialization context import com fasterxml jackson databind object mapper import com fasterxml jackson databind deser deserialization problem handler import org junit test import java exception import java util uuid public class uuid deserializer test test public void uses deserialization problem handler properly throws exception object mapper mapper new object mapper add handler new deserialization problem handler override public object handle weird string value final deserialization context ctxt final class target type final string value convert final string failure msg throws exception return null mapper read value not uuid bean class public static class bean private uuid public uuid get return public void set final uuid this the handler handles the issue properly but exception thrown anyway not deserialize value type java util uuid from string not uuid not valid textual representation source string not uuid line column through reference chain com company test uuid deserializer test bean com fasterxml jackson databind exc invalid format exception can not deserialize value type java util uuid from string not uuid not valid textual representation source string not uuid line column through reference chain com company test uuid deserializer test bean com fasterxml jackson databind exc invalid format exception from invalid format exception java com fasterxml jackson databind deserialization context weird string exception deserialization context java 1504 com fasterxml jackson databind deser std from string deserializer deserialize from string deserializer java 156 com fasterxml jackson databind deser impl method property deserialize and set method property java 127 com fasterxml jackson databind deser bean deserializer vanilla deserialize bean deserializer java 287 com fasterxml jackson databind deser bean deserializer deserialize bean deserializer java 151 com fasterxml jackson databind object mapper read map and close object mapper java 3999 com fasterxml jackson databind object mapper read value object mapper java 2980 the text was updated successfully but these errors were encountered copy link member cowtowncoder commented may 2017 thank you for reporting this does indeed look like this deserializer does not add relatively new handler method but instead directly calls method throw exception this should not happen cowtowncoder added active labels may 2017 copy link member cowtowncoder commented may 2017 edited one question first which jackson version can not reproduce this with cowtowncoder added commit that referenced this issue may 2017 add passing unit test for 1629 loading status checks edaa 4ad copy link author apjoseph commented may 2017 tested most recent version not sure how far goes back copy link member cowtowncoder commented may 2017 hmmh this odd considering test added passes try your test case exactly shown copy link member cowtowncoder commented may 2017 interesting this triggered returning null handler called appropriately seems but check for null taken sub class indicate problem which really shouldn cowtowncoder added this the milestone may 2017 cowtowncoder changed the title from string deserializer ignores registered deserialization problem handler from string deserializer ignores registered deserialization problem handler for java util uuid may 2017 copy link member cowtowncoder commented may 2017 fixed hope this does not introduce problems with other deserializers but does those can worked around not using null signal error conditions didn see any places where that was done but possible missed some regardless all tests pass cowtowncoder closed this 083ad may 2017 cowtowncoder removed the active label jun 2017 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.FromStringDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
