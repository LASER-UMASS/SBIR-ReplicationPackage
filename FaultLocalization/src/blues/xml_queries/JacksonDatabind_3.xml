<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_3" link="https://github.com/FasterXML/jackson-databind/issues/479">
<buginformation>
<summary>regression  updating  from  won  deserialize</summary>
<description>steps reproduce clone the repository https github com huxi sulky execute the contained gradlew gradlew bat clone the repository https github com huxi lilith change jackson version the project ext versions map dependency definitions gradle from execute the contained gradlew gradlew bat there will six test failures with that won happen with there are actually only test methods that fail times each those methods reside full and null argument first suspected that afterburner module might the culprit but removing from logging json decoder logging json encoder didn fix the problem sorry for not narrowing down the problem further give this another look tomorrow but you may already able find the issue the meantime the interesting thing that several other test cases are working intended the text was updated successfully but these errors were encountered copy link author huxi commented jun 2014 forgot mention system specs gradle build time 2014 utc build number none revision 831fa 866d 46cbee 94e 61a 09af 15f 9dd 95987421 groovy ant apache ant version compiled december 2013 ivy jvm oracle corporation mac copy link member cowtowncoder commented jun 2014 and assume jdk has not been problematic with don yet use java except for building modules that require copy link member cowtowncoder commented jun 2014 hmmh build sulky fails using jdk huxhorn sulky formatting safe string test date failed java lang assertion error safe string test java 226 copy link author huxi commented jun 2014 yes works with java this might bit unusual but could you change the log level info and send the output the test suspect timezone snafu sigh otherwise just ignore the test question get result copy link author huxi commented jun 2014 fixed the problem you reported thanks for the info copy link member cowtowncoder commented jun 2014 now can build sulky just fine will see how far get copy link member cowtowncoder commented jun 2014 looks like this stack trace caused java lang null pointer exception com fasterxml jackson databind deser std string array deserializer deserialize string array deserializer java com fasterxml jackson databind deser std string array deserializer deserialize string array deserializer java com fasterxml jackson databind deser settable bean property deserialize settable bean property java 538 com fasterxml jackson module afterburner deser settable object method property deserialize and set settable object method property java com fasterxml jackson module afterburner deser super sonic bean deserializer deserialize from object super sonic bean deserializer java 226 more might relevant here not necessarily due afterburner although callpath but possibly due changes string array deserializer which think did indeed work for for some performance reason copy link member cowtowncoder commented jun 2014 yes think found the regression bug while next token json token end array need convert strings but must recognize nulls string value json token value string value get text else json token value null value element deserializer get null value else and what happens here that element deserializer null since only non null for custom string deserializer will write unit test verify and fix this depending rate bugs found may want push intermediate micro release sooner before there are enough bugs full patch release but first things first will need fix this bug and see there are other problems cowtowncoder closed this 992 jun 2014 cowtowncoder added commit that referenced this issue jun 2014 minor test improvement wrt 479 loading status checks dfd cowtowncoder changed the title regression updating from regression updating from null won deserialize string jun 2014 copy link member cowtowncoder commented jun 2014 fixed the first problem looks like there may others only out were will create new bugs for those needed copy link member cowtowncoder commented jun 2014 actually test pass for locally after the fix checked the fix possible for you build things locally snapshot just make sure there are other problems bug itself unfortunate but worse part that neither unit tests caught nor various tests have for benchmarking added regression test for what that worth and added that well where passes expected copy link author huxi commented jun 2014 wow fast response time just gave the jackson databind snapshot spin with lilith and two other rather big closed source company projects that both use jackson extensively everything looks fine copy link member cowtowncoder commented jun 2014 good thank you for verifying this sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
