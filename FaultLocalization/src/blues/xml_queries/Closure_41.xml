<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_41" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-368.json">
<buginformation>
<summary>advanced  mode  compiler  fails  warn  about  overridden  methods  with  different  signatures</summary>
<description>advanced  mode  compiler  fails  warn  about  overridden  methods  with  different  signatures  the  following  code  only  warns  the  one  instance  noted  the  comment  whereas  would  expect  complain  about  the  declarations  both  bar  prototype  add  and  bar  prototype  sub  they  claim inherit doc  but  have  seemingly  different  signatures  from  that  their  superclass  methods  would  helpful  have  such  warning  that  when  you  change  the  signature  superclass  method  you  can  run  the  compiler  trigger  warnings  and  find  all  the  other  signatures  that  you  need  update  run  the  following closure compiler  compilation  level  advanced  optimizations  output  file  name  default  use  closure  library  true closure compiler  goog  provide  foo  goog  provide  bar  constructor  foo  function  param  number  param  number  return  number  foo  prototype  add  function  return  param  number  param  number  return  number  foo  prototype  sub  goog abstract method  constructor  extends  foo  bar  function  goog  base  this  goog  inherits  bar  foo inherit doc  bar  prototype  add  function  one  return  one inherit doc  bar  prototype  sub  function  one  return  one  var  foo  type  foo  new  bar  alert  foo  add  var  bar  new  bar  this  produces  jsc  wrong  argument  count  alert  bar  add  think  they  have  compatible  signatures  bar  prototype  add  can  take  arguments  and  will  work  just  fine  think  what  really  need  infer  dynamically  that  bar  prototype  add  may  called  with  argument  arguments  and  the  second  argument  optional  all  that  would  completely  consistent  our  type  system  think  and  were  also  talking  about  the  secondary  question  whether  there  should  warning  for  the  overriding  methods  said  the  past  because  there  are  many  cases  where  this  feature  useful  you  have  event  handler  that  doesn  use  the  event  object  doesn  really  make  sense  declare  variable  for  talked  about  having  override  mean  omit  arguments  and inherit doc  mean  all  the  arguments  the  original  documentation  must  the  function  151  closure  the  definitive  guide  give  example  the  dangers  introducing  new  optional  argument  function  that  used  listener  function  which  why  discourage  omitting  the  event  variable  the  signature  included  this  example  because  definitely  been  stung  and  hard  track  down  when  happens  not  sure  completely  maps  the  current  bug  hand  though  this  issue  was  closed  revision  1742</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.FunctionTypeBuilder</file>
</fixedfiles>
</bug>
</bugrepository>
