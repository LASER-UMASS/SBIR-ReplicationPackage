<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_109" link="https://github.com/FasterXML/jackson-databind/issues/2230">
<buginformation>
<summary>ignored  used</summary>
<description>trying serialize big decimal json string while avoiding scientific notation kotlin data class test json format shape json format shape string val value big decimal fun main val mapper jackson object mapper configure json generator feature write bigdecimal plain true val test test 0000000005 big decimal println mapper write value string test output value json format removed then write bigdecimal plain works and output value 00000000050 json number not string but trying make json string with json format results write bigdecimal plain being ignored using latest version jackson bom the text was updated successfully but these errors were encountered cowtowncoder added active labels jan 2019 copy link member cowtowncoder commented jan 2019 notice that code not plan java but kotlin good ensure that behavior does not vary between java and kotlin can modify code ensure but going forward good isolate this first reason being that sometimes kotlin module has additional problems for example annotation might discovered different way good know where problem occurs but for now assume this reproducible with just java copy link author pacher commented jan 2019 cowtowncoder thanks for looking into this sorry was under impression that generally acceptable provide snippets kotlin these days yes reproducible with just java public class main public static void main string args throws json processing exception var mapper new object mapper configure json generator feature write bigdecimal plain true var test new test new big decimal 0000000005 system out println mapper write value string test class test private final big decimal value test big decimal value this value value json format shape json format shape string public big decimal get value return value same outputs value with json format and value 0000000005 without copy link member cowtowncoder commented jan 2019 use kotlin for demonstrating many aspects but can include directly jackson does not use kotlin runtime can run and don want add dependency just for tests and times kotlin module adds special handling often easier use basic java unless have kotlin specific problem thank you again for reporting the problem helping even more useful reproduction hope work this issue soon copy link ged marc commented jan 2019 must admit honestly never considered kotlin the norm especially not for test cases and never heard referenced such the recommended for android yes but not for standard use far aware that pretty bold statement make copy link ged marc commented jan 2019 cowtowncoder have similar scenario side will see what can today cowtowncoder added and removed active labels feb 2019 copy link member cowtowncoder commented feb 2019 can reproduce this fine from java there nothing kotlin specific the reason for problem that when forcing serialize string most types will use default string serializer which will then not any additional processing value see can fix this easily need defer cowtowncoder changed the title write bigdecimal plain ignored json format used write bigdecimal plain ignored json format used feb 2019 cowtowncoder added this the milestone feb 2019 cowtowncoder closed this 287a feb 2019 copy link member cowtowncoder commented feb 2019 well that was more work than thought partially since there actually one aspect consider with plain strings too but implemented for will not backport cowtowncoder mentioned this issue jul 2019 serialization feature write bigdecimal plain not taken into account when serializing big decimal string 2323 closed cowtowncoder mentioned this issue oct 2019 big decimal string serializer number serializer throws illegal state exception 2513 closed sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ser.std.NumberSerializer</file>
<file>com.fasterxml.jackson.databind.ser.std.NumberSerializers</file>
</fixedfiles>
</bug>
</bugrepository>
