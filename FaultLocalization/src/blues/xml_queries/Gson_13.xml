<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Gson_13" link="https://github.com/google/gson/issues/1053">
<buginformation>
<summary>negative  zero</summary>
<description>edited have been cross testing various json parsers looking for those that expose the lexical json numbers and not only their bound java lang number because the lazy parsing done gson with lazily parsed number that keeps the lexical all roundtrip tests pass apart one the lexical that treated were read some threads about negative zero https www ietf org mail archive web json current msg 03668 html https www ietf org mail archive web json current msg 01520 html https www ietf org mail archive web json current msg 01523 html https www ietf org mail archive web json current msg 01525 html created this issue thinking that float the same since signed zero makes sense only floating point numbers and also because java only double float preserve sign zero this would have the implication that could not validated jsonschema type integer and that jsonschema implementation would have the need know present json data but probably this not the case after started consider that could integer only that seems that programming language there integer that preserves sign for zero any case differentiating between and lexical level would allow client gson able refuse the value gson could easily support differentiating between and code treated integer peeked long json reader its value stored java long that cannot represent negative zero noted that roundtrips correctly because treated peeked number that kept java string the case could trapped and treated peeked number this way the string method lazily parsed number will return and gson will able roundtrip any valid number value found source only clients using number string will notice any difference proposal change this code from last number char digit fits long value long min value negative last number char digit fits long value false negative value long min value negative thanks michele the text was updated successfully but these errors were encountered inder 123 assigned swankjesse apr 2017 copy link collaborator inder 123 commented apr 2017 swankjesse any concerns accept this change eleumik thank you for taking time write the issue with considerable detail would great you can also send pull request that can just merge please include test case for negative zero well eleumik mentioned this issue apr 2017 negative zero test and fix 1069 merged inder 123 closed this apr 2017 copy link contributor author eleumik commented apr 2017 somebody knows integer with representation any language float same other please let know thanks for merging happy you liked copy link collaborator inder 123 commented apr 2017 all languages that use two complement can not represent ints copy link collaborator inder 123 commented apr 2017 eleumik did the test that you write fail without your fix nightly nexus added commit square moshi that referenced this issue apr 2017 treat negative zero number not long loading status checks 71e updates logic from google gson 1053 nightly nexus mentioned this issue apr 2017 treat negative zero number not long square moshi 285 merged copy link contributor author eleumik commented apr 2017 yes wrote first the test double checked now copy link collaborator inder 123 commented apr 2017 thanks yes tdd for bug fixes awesome nightly nexus added commit square moshi that referenced this issue apr 2017 treat negative zero number not long loading status checks 35917f updates logic from google gson 1053 swankjesse added commit square moshi that referenced this issue apr 2017 treat negative zero number not long 285 loading status checks 448a updates logic from google gson 1053 hsenag mentioned this issue oct 2018 can represent negative zero galois inc json open sign for free join this conversation git hub already have account sign comment assignees swankjesse labels none yet projects none yet milestone milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.google.gson.stream.JsonReader</file>
</fixedfiles>
</bug>
</bugrepository>
