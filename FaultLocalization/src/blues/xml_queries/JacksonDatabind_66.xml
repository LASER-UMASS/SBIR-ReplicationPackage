<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_66" link="https://github.com/FasterXML/jackson-databind/issues/1441">
<buginformation>
<summary>failure  with  custom  enum  key  deserializer  polymorphic  types</summary>
<description>normally the json parser and the deserialization context passed module json deserializer however the map deserializer when deserializing map with enum key the key deserializer doesn accept the json parser argument https github com faster xml jackson databind blob master src main java com fasterxml jackson databind deser std map deserializer java 453 object key key des deserialize key key str ctxt and the std key deserializer delegating uses the context parser https github com faster xml jackson databind blob master src main java com fasterxml jackson databind deser std std key deserializer java 315 object result delegate deserialize ctxt get parser ctxt when the type info field missing from the json the deserialization context json parser token end object presumably because next token through the object find type and whiffed this makes the module fail since the json parser the module wrong not the same the json parser the map deserializer class import com fasterxml jackson annotation json type info import java util map import static com fasterxml jackson annotation json type info name json type info use name property type default impl super type class public class super type private map super type enum string some map public map super type enum string get some map return some map public void set some map map super type enum string some map this some map some map enum public enum super type enum foo test import com fasterxml jackson core json parser import com fasterxml jackson databind deserialization context import com fasterxml jackson databind json deserializer import com fasterxml jackson databind object mapper import com fasterxml jackson databind module simple module import org junit import java exception import static org junit assert assert equals public class test deserialize type test public void test type should deserialize throws exception string json some map foo bar object mapper mapper new object mapper super type super type mapper read value json super type class assert equals deserialized some map foo should equal bar bar super type get some map get super type enum foo test public void test type with module should deserialize throws exception string json some map foo bar object mapper mapper new object mapper simple module simple module new simple module simple module add deserializer super type enum class new json deserializer super type enum override public super type enum deserialize json parser json parser deserialization context deserialization context throws exception return super type enum value json parser get text mapper register module simple module super type super type mapper read value json super type class assert equals deserialized some map foo should equal bar bar super type get some map get super type enum foo the text was updated successfully but these errors were encountered copy link member cowtowncoder commented nov 2016 thank you for reporting this sounds like work around used allow some value deserializers used key deserializers has some issues cowtowncoder modified the milestones nov 2016 cowtowncoder changed the title when json type info missing from json modules for enums keys maps always have end token the json parser failure with custom enum key deserializer polymorphic types nov 2016 cowtowncoder closed this 5430a nov 2016 copy link member cowtowncoder commented nov 2016 wow not sure why implemented delegating key deserializer that way wrong should not delegate original parser general and this case parser would wrong due buffering needed for type anyway better way construct bogus token buffer json parser and add key that has already been accessed and passed the argument give that parser safer and necessary here thank you for reporting this providing test case fixed for released relatively soon within next week two cowtowncoder mentioned this issue nov 2016 key deserializer instance defined private static not found even though added registered simple module 1447 closed sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
