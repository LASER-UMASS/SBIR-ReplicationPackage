<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_53" link="https://github.com/FasterXML/jackson-databind/issues/1215">
<buginformation>
<summary>problem  with  type  specialization  for  maps  with</summary>
<description>have json that looks like something uuid property value and have java pojo with annotation like this json deserialize hash map class private void set something map uuid foo incoming value where hash map java has some custom logic using generics that allow map the array json above into map where the key and everything else serializes into the value use generics hash map enforce that every value implements certain interface that respects the contract returning property this example foo java implements this interface custom interface java when using this worked fine but switch then breaks with the error can not construct instance custom interface problem abstract types either need mapped concrete types have custom deserializer instantiated with additional type information looks like jackson resolves using abstract deserializer based custom interface but resolves using bean deserializer based foo java this bug there some default feature flag that changed here the text was updated successfully but these errors were encountered copy link member cowtowncoder commented apr 2016 think this one bugs fixed 1186 for think this will resolved with the problem was that generic type parameters were not being properly resolved when creating specialized subtype hash map would taken hash map object object despite map having type parameters the only thing make sure that you declare hash map generic something like public class hash map extends hash map whatever base type because otherwise type resolution can not properly propagate variable substitutions earlier versions did not care they forcible set parameters regardless but this not possible any more don know possible for you check snapshot verify but fairly confident this the root cause copy link author brentryan commented apr 2016 can easily check that out repost what find thanks for the quick response copy link author brentryan commented apr 2016 built the branch jackson core and jackson databind locally and updated test project use snapshot and doesn fix the problem see there more investigation can and maybe create unit test that fails within this project not sure how possible that will because uses annotations project but can give try copy link author brentryan commented apr 2016 also appears like the issue still present master snapshot well copy link member cowtowncoder commented apr 2016 edited brentryan thank you for checking this too bad problem not fixed try figure out probably tomorrow any help diagnosing appreciated but thnik information you gave should sufficient need write test copy link member cowtowncoder commented apr 2016 reading the description more detail think reproduction needed quite possible that what happens here more complex than previously added cases how specialize type parameters before handling was much simpler and more naive which has its problems well benefits copy link author brentryan commented apr 2016 setup mini project with example that reproduces the issue probably easier since combines few jackson libraries that aren part just unit tests are harder copy link member cowtowncoder commented apr 2016 brentryan sounds good thank you advance copy link author brentryan commented apr 2016 jackson test zip cowtowncoder here example project that shows failing change the version and you see work while fails copy link member cowtowncoder commented apr 2016 brentryan thank you can reproduce this locally and have lead follow somehow due using wrong part type information possibly not due refinement which appears work just fine but rather due some part code looking method field signature and not refined type cowtowncoder added commit that referenced this issue apr 2016 add failing test for 1215 loading status checks dae 5440 copy link member cowtowncoder commented apr 2016 brentryan actually think that the code can not work properly and the reason jackson worked with was due lucky flaw the problem follows class hash map defined class hash map extends has unique extends linked hash map implements another map which fine setting bounds but the creator method static json creator public static extends has unique hash map from array values and type variables and are not the same those class declaration they can not method static static methods can not refer type parameters declaring class they could you would not need declare them locally after all because this method only has bound extends has unique and can not refer type item that would needed why did this work with jackson because jackson type resolution got fooled declarations and assumed and from class declaration are valid but luckily for this case worked out the end copy link member cowtowncoder commented apr 2016 how fix the code work well ideally you would able choose local types for creator method work properly that instead base abstract has unique value type item couldn get that work with simple mechanism but did get following variant pass test json creator public static extends has unique hash map from array item values hash map map new hash map for int values length item values get null throw new runtime exception failed get map contains key get throw new runtime exception conflict map put get return map bit nasty what with forced casts and has hard code item signature but there isn much more you can with static methods they can not vary instance type you could however define actual constructor constructors are member methods and are able access type parameters just fine that might much better solution following should work json creator mode json creator mode delegating probably fine without mod too public hash map values for int values length values get null throw new runtime exception failed get contains key get throw new runtime exception conflict put get but seems have some issues unlike static version above see can work around this issue copy link member cowtowncoder commented may 2016 there definitely issue with constructors for this case will leave this issue open for that part modified the test case appropriately well after spending some time this think related type refinements will see this can fixed for only copy link author brentryan commented jun 2016 cowtowncoder haven tried yet but was this issue covered latest copy link member cowtowncoder commented jun 2016 brentryan issue with constructor type mismatch not yet resolved per test failing test included allow reproduction copy link member cowtowncoder commented jun 2016 edited odd first looked like generic type specialization problem but turns out that type factory does give correct answer but somewhere down the line type more less forgotten ill need follow deeper cowtowncoder changed the title possible problem with and custom deserializer list map problem with type specialization for maps with json deserialize subtype jun 2016 cowtowncoder added this the milestone jun 2016 cowtowncoder closed this 75a 0953 jun 2016 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.type.TypeBindings</file>
<file>com.fasterxml.jackson.databind.type.TypeFactory</file>
</fixedfiles>
</bug>
</bugrepository>
