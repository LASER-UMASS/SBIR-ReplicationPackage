<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_115" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-1101.json">
<buginformation>
<summary>erroneous  optimization  advanced  optimizations  mode</summary>
<description>what  steps  will  reproduce  the  problem  create  file  input  with  the  following  quot  minimal  quot  test  case  window  quot  anchor  quot  function  obj modifies prop  return  function  saved  return modifies prop  obj  saved  obj  quot  prop  quot  compile  with  java  jar  build  compiler  jar  compilation  level  advanced  optimizations  warning  level  verbose  externs  window  input  output  file  output  that  all  what  the  expected  output  window  foo  function  var  hold  prop  return  hold  what  you  see  instead  window  foo  function  return  prop  note  how  this  semantically  very  different modifies prop  whose  semantics  are  unknown  the  compiler  side  effects  prop  the  evaluation  order  well  defined ecma script  but  even  then  this  happens  even  one  substitutes  the  comma  operator  what  version  the  product  are  you  using  what  operating  system  git  head  commit 62ee 4bca 02169dd 77a 26ed 64a 624b 05f  author  chad  killingsworth  chadkillingsworth  missouristate  edu  date  wed  sep  2013  0500  add  history  state  html  externs  linux  had  another  look  this  and  have  cooked  the  attached  patch  which  seems  safe  only  disables  optimizations  but  wreaks  havoc  the  inliner  test  suite  disabling  direct  call  node  inlining  node may have side effects  may  seem  bit  drastic  but  downstream  pass  still  performs  inlining  while  introducing  the  required  temp  small  test  case  not  sure  when  that  pass  activated  though  the  change  may  have  more  dramatic  effect  some  code  bases  unfortunately  lack  the  time  study  the  innards  closure  and  sift  through  these  failures  would  great  somebody  familiar  with  the  compiler  could  comment  the  next  steps  undertake  cheers  damien  diederenouch  thanks  for  the  report  the  change  the  patch  overly  aggressive  don  need  this  there  aren  any  arguments  all  the  arguments  are  literals  otherwise  can  side  effected  you  want  try  your  hand  better  patch  change can inline reference directly  check  the  function  body  has  side  effects  and  does  back  out  any  the  arguments  can  side  effected node util can side effected  john  thanks  for  the  suggestions  had  stab  fixing  this  less  impactful  way  patch  attached  and  now  down  eight  failing  tests  here  quick  preliminary  analysis test inline functions  now  introduces  extra  temps test inline functions  idem test inline functions  idem test double inlining  the  argument  possibly  modified  but  tail  position test inline parameters modified  the  serialized  results  match  but  the  test  generated  tree  includes  additional  block  for  some  reason test inline parameters modified  idem test issue 1101  own  test  same  extra  block test bug 4944818  haven  looked  into  feel  free  write  down  further  clues  that  you  may  have  case  manage  have  another  look  this  before  your  team  gets  cheers  dhttps  codereview  appspot  com  14124043  can  you  sign  cla  https  code  google  com  closure  compiler  wiki  contributors  take  from  here  john  chad  have  submitted  electronically  signed  individual  cla  should  processed  shortly  the  key  was nys 43u gnq  cheers  this  issue  was  closed  revision  80dfd  this  issue  was  closed  revision 4597738e 8898  this  was  rollback  due  some  internal  issues  hope  take  another  look  this  week  this  issue  was  closed  revision  80dfd  this  issue  was  closed  revision 4597738e 8898  this  issue  was  closed  revision 038da 2119223  this  issue  was  closed  revision 038da 2119223  finally  got  bump  the  version  closure  used  project  and  can  confirm  the  fix  thanks</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.FunctionInjector</file>
</fixedfiles>
</bug>
</bugrepository>
