<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Mockito_6" link="https://github.com/mockito/mockito/issues/134">
<buginformation>
<summary>argument  matcher any xxx any string any list  should  not  match  nulls</summary>
<description>this bug seeing version older version has the same issue tested with given function object integer function mockito mock function class when function apply mockito any string then return integer result function apply expected behavior result null actual behavior result note that the function called with integer not string and still the mocked function return the value which should return only when string passed the same works when using any boolean any other methof from any family the text was updated successfully but these errors were encountered mockitoguy mentioned this issue dec 2014 release mockito 123 closed tasks complete copy link member mockitoguy commented dec 2014 let fix mockito copy link contributor pimterry commented dec 2014 currently looking fixing this just confirm the current any behaviour just accept anything any type all any string any integer etc are all the same any object and prefer instead make all these methods except any object actually type checking and match only nulls and instances the specified type that right basing this https code google com mockito issues detail 122 which hope isn too out date copy link member mockitoguy commented dec 2014 think that any should not pass for nulls and should only pass when the object instance given type dev team any thoughts might worth asking the mailing list what the users think might also change matcher consistent and not pass for nulls this would effectively make any alias copy link author alexo commented dec 2014 the any should either respect the expectation not exist all working just like any object make confusing and also pollute the api with large number methods copy link member mockitoguy commented dec 2014 with you copy link contributor pimterry commented dec 2014 szczepiq that actually the current behaviour currently does not match nulls https github com mockito mockito blob master src org mockito internal matchers instance java think this means just want change all any alias class any object still seems like interesting case there though with this having match nulls makes this api confusingly inconsistent but think there still strong use case for ultra general give anything all matcher could make any object alias for any object class doesn accept nulls and then add any simpler anything reads nicer stub setup calls matchers think those could more reasonably accept nulls without feeling inconsistent obviously this all not nicely backward compatible assuming you fine with that since you heading for definitely something that will catch people out when they migrate though copy link member mockitoguy commented dec 2014 think wouldn bother changing any object consistent with the family any methods any int any string etc like the idea any alias any object perhaps could even deprecate any object favor any but rather keep separate not backwards incompat change and can released any time obviously this all not nicely backward compatible the changeset you can include change version properties file that modifes the version beta you the first code mockito feature would stay beta version for some time until make all backwards incompatible changes feel free help more you want mockitoguy added bug incompatible labels dec 2014 copy link contributor pimterry commented dec 2014 consistent with the family any methods any int any string etc don think with these changes the below will pass when mock string method any string then return matched when mock object method any object then return matched assert equals matched mock string method string assert equals null mock string method null assert equals matched mock object method new object assert equals matched mock object method null inconsistent feel free help more you want very happy help out more any specific issues you want looking issues that are definitely ready for dev should just dive copy link member mockitoguy commented dec 2014 you can start with this issue let avoid changing the existing behavior any object now can however think about deprecating with something like any separate discussion pimterry mentioned this issue dec 2014 fix any methods not match nulls 141 closed copy link contributor pimterry commented dec 2014 now left any object any and any class for now matching everything including nulls and just fixed any not match nulls any class mockitoguy changed the title mockito any string acts mockito any object argument matcher any xxx any string any list should not match nulls dec 2014 mockitoguy closed this 20582 jan 2015 copy link member mockitoguy commented jan 2015 included beta thanks for help bric mentioned this issue mar 2015 any string does not work for null 185 closed bric added this the milestone aug 2016 copy link contributor bric commented aug 2016 for reference purpose see related work 510 well arsnova bot pushed commit thm projects arsnova backend that referenced this issue mar 2020 adjust tests for mockito compatibility 38351d multiple tests question based learning progress test broke with the upgrade mockito see mockito mockito 134 see mockito mockito 141 sign for free join this conversation git hub already have account sign comment assignees one assigned labels incompatible bug projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>org.mockito.Matchers</file>
</fixedfiles>
</bug>
</bugrepository>
