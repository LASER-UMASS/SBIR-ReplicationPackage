<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_95" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-66.json">
<buginformation>
<summary>use  public  tag  prevent  compression  symbol  names</summary>
<description>given  this  input  code  glow  public  glow  versions  glow show versions  function  alert  glow  versions  exports  window  glow  glow  glow  versions  glow  versions  glow show versions  glow show versions  the  compiler  with  advanced  optimizations  will  produce  the  following  output  code  glow  glow  glow  function  alert  glow  window  glow  glow  glow  versions  glow  glow show versions  glow  from  outside  the  glow  library  user  may  the  following  their  own  uncompressed  code  glow  versions  glow show versions  only  the  compiled  code  will  the  user  code  produces  quot  quot  instead  the  expected  quot  quot  this  because  the  compiler  renamed  the  reference show versions  quot  glow  quot  whilst  the  user  assigned  new  array  quot  glow  versions  quot  and  therefore  the  two  different  names  now  refer  two  different  arrays  can  avoid  this  using  the  stringy  name  refer  glow  quot  versions  quot  but  would  then  have  that  everywhere  code  which  annoying  and  bug  prone  someone  else  should  ever  forget  prefer  tell  the  compiler  once  about  wish  have  property  name  left  uncompresed  rather  than  relying  side  effect  the  fact  that  the  compiler  won  compress  stringy  named  properties  and  then  having  invoke  that  side  effect  consistently  everywhere  instead  requesting  that  when  the  compiler  sees  property  marked  the  author  public  should  then  leave  that  name  uncompressed  everywhere  given  the  input  code  above  the  desired  output  would  glow  glow  versions  glow  function  alert  glow  versions  window  glow  glow  glow  versions  glow  versions  not  needed  now  glow show versions  glow  not  fixed  particular  tag  but  public  seems  obvious  choice  and  prefer  use  tags  that  already  exist  doc  toolkit  note  that  proposed  feature  different  than  the  export  glow  versions  tag  proposal  that  tag  would  merely  shortcut  for  quot  glow  versions  glow  versions  quot  which  shown  above  doesn  solve  this  problem  the  work  around  use  setter  glow set versions accepted versions  glow  versions accepted versions  window  glow set versions  glow set versions  adding  setters  and  getters  for  every  property  want  expose  workaround  but  hardly  better  than  referring  them  with  strings  internally  say  worse  actually  because  alters  our  public  api  and  makes  everything  slower  the  process  appreciate  the  suggestion  but  was  one  already  considered  and  rejected  perhaps  another  potential  workaround  compile  with  externs  file  telling  the  compiler  that  glow  versions  should  never  touched  root  pal  iplayer  utils  cat  glow  glow  versions  glow show versions  root  pal  iplayer  utils  java  jar  lib  compiler  jar  compilation  level  advanced  optimizations  formatting  pretty  print  glow  glow  glow  root  pal  iplayer  utils  cat  var  glow  versions  null show versions  null  root  pal  iplayer  utils  java  jar  lib  compiler  jar  compilation  level  advanced  optimizations  externs  formatting  pretty  print  glow  glow  versions  glow show versions  second  this  feature  request  and  for  the  most  crucial  feature  enhancement  can  currently  think  the  lack  public  annotation  currently  prevents  from  using  advanced  optimizations  all  because  using  stringy  named  properties  everywhere  isn  option  because  makes  the  code  much  less  readable  micmath  setters  are  not  option  because  then  you  have  the  same  problem  with  the  setters  the  compiler  creates  alias  for  the  setter  this  alias  used  internally  when  you  some  inheritance  now  and  override  the  setter  then  third  party  code  using  the  new  setter  but  internally  the  old  setter  still  used  because  the  alias  used  and  that  bad  for  class  inheritance  ithinkihaveacat  using  externs  not  working  because  the  compiler  complains  about  redefined  stuff  when  the  externs  file  has  the  same  stuff  the  source  code  compiled  maybe  this  was  working  with  earlier  version  the  closure  compiler  and  think  not  correct  anyway  define  local  stuff  externs  file  recommend  implementing  two  annotations  public  annotation  mark  symbols  they  are  not  aliased  all  this  the  same  using  stringy  named  properties  everywhere  the  way  protected  symbols  must  also  not  aliased  because  third  party  code  may  want  extend  the  method  only  private  symbols  can  always  aliased  final  annotation  mark  symbols  final  this  means  that  the  compiler  allowed  create  alias  for  symbol  which  defined  public  protected  because  not  allowed  override  this  property  anyway  the  alias  always  stable  comment  deleted  public  would  never  apply  functions  within  closure  they  are  not  accessible  you  are  asking  for  something  different  the  compiler  has  capability  not  currently  exposed  the  command  line  name  anonymous  functions  that  bar  function  becomes  something  like  bar  function  bar  for  more  complete  stack  traces  just  exemplify  clear  need  for  looking  use  closure  compiler  for  editor  editor  exposes  extensive  public  api  partially  documented  here  http  docs  cksource  com  ckeditor  api  would  love  use  the  advanced  mode  but  considering  that  every  publicly  accessible  name  aliased  forced  use  the  simple  mode  the  following  the  original  code  and  the  compiled  code  advanced  mode  http  nightly  ckeditor  com  latest  ckeditor  ckeditor  http  closure  compiler  appspot  com  code jsc 29454f 2fef 93e 2ea 5ef 525d 3201d  default  the  very  start  the  code  you  can  find  the  following  window  ckeditor  window  ckeditor  which  compiled  window  window  and  the  same  for  all  ckeditor  properties  and  methods  think  that  the  simple  rule  that  everything  that  publicly  accessible  should  remain  untouched  already  very  good  start  for  then  the  developer  apply  other  tags  identify  stuff  that  can  freely  aliased  this  implemented  expose  https  developers  google  com  closure  compiler  docs  for  compiler</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.TypedScopeCreator</file>
</fixedfiles>
</bug>
</bugrepository>
