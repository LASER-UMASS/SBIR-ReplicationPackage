<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_76" link="https://github.com/FasterXML/jackson-databind/issues/1573">
<buginformation>
<summary>missing  properties  when  deserializing  using  builder  class  with  non  default  constructor  and  mutator  annotated  with</summary>
<description>edited when deserializing using builder class with non default constructor and any number mutator methods annotated with json unwrapped the builder based deserializer deserialize using property based with unwrapped method cuts short the process adding settable bean properties the logic dictates that once all properties necessary construct the builder have been found the builder constructed using all known settable bean properties that have been found that point the tokenizing process therefore the case that the builder has single property required for construction and that property found anywhere other than the end the json content any properties subsequent the constructor property are not evaluated and are left with their default values given the following classes json deserialize builder employee builder class public class employee private final long private final name name private final int age private employee builder builder builder name builder name age builder age public long get return public name get name return name public int get age return age json pojo builder with prefix set public static class builder private final long private name name private int age json creator public builder json property emp long this json unwrapped public void set name name name this name name json property emp age public void set age int age this age age public employee build return new employee this public class name private final string first private final string last json creator public name json property emp first name string first json property emp last name string last this first first this last last public string get first return first public string get last return last and given the following json string emp age emp 1234 emp first name john emp last name doe will see the following output employee emp new object mapper read value json employee class system out println emp get age system out println emp get 1234 system out println emp get name null however place the emp property the end the json string would get the following output employee emp new object mapper read value json employee class system out println emp get age system out println emp get 1234 system out println emp get name name object were place emp age and emp first name and emp last name all after the emp property the json string would get the following output employee emp new object mapper read value json employee class system out println emp get age system out println emp get 1234 system out println emp get name null the text was updated successfully but these errors were encountered cowtowncoder added commit that referenced this issue mar 2017 merge pull request 1574 from jjware loading status checks 08dafe fixes 1573 cowtowncoder added this the milestone mar 2017 cowtowncoder changed the title bug when deserializing using builder class with non default constructor and mutator annotated with json unwrapped when deserializing using builder class with non default constructor and mutator annotated with json unwrapped mar 2017 cowtowncoder changed the title when deserializing using builder class with non default constructor and mutator annotated with json unwrapped missing properties when deserializing using builder class with non default constructor and mutator annotated with json unwrapped mar 2017 cowtowncoder closed this 16ffb mar 2017 sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer</file>
</fixedfiles>
</bug>
</bugrepository>
