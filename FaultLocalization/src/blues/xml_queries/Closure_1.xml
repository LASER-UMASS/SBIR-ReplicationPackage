<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_1" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-253.json">
<buginformation>
<summary>function  arguments  should  not  optimized  away</summary>
<description>function  arguments  should  not  optimized  away  this  comprimizes  the  function  length  property  what  steps  will  reproduce  the  problem closure compiler  compilation  level  simple  optimizations  output  file  name  default closure compiler  function  foo  bar  baz  return  bar  alert  foo  length  function  foo  bar  baz  return  bar  alert  foo  length  what  the  expected  output  function  foo  return  alert  foo  length  what  you  see  instead  function  foo  return  alert  foo  length  what  version  the  product  are  you  using  what  operating  system  using  the  product  from  the  web  page  http  closure  compiler  appspot  com  home  using  firefox  ubuntu  please  provide  any  additional  information  below  the  function  length  property  essential  many  techniques  such  currying  functions  this  kind  reflection  generally  not  supported  the  compiler  evident  its  restrictions  imposed  eval  http  code  google  com  closure  compiler  docs  limitations  html  the  general  case  referring  length  anything  other  than  named  function  expression  not  safe  function  return  length  console  info  var  function  console  info  for  named  function  expression  the  could  replace  the  length  with  constant  even  simple  mode  although  doesn  currently  var  function  return  length  could  then  transformed  after  unused  variable  removal  var  function  return  pardon  initial  post  accidentally  doubled  the  code  should  have  been  function  foo  bar  baz  return  bar  alert  foo  length  don  think  this  changes  your  response  the  issue  though  but  who  knows  fail  see  how  restrictions  eval  relevant  this  issue  given  one  working  with  simple  optimizations  given  the  description  for  advanced  optimizations  can  understand  removal  usually  extraneous  function  parameters  this  issue  does  not  get  solved  via  directly  fixing  the  issue  allowing  annotations  for  whatnot  should  documented  the  simple  optimizations  section  your  limitations  page  stands  the  simple  optimizations  section  gives  clue  that  may  remove  parameters  for  those  who  want  see  imo  convincing  use  function  prototype  length  see  the  following  page  http  www  codingforums  com  showpost  php  683518  postcount  ocamljs  which  translates java script  code  from  caml  code  also  suffers  from  this  issue  this  optimization  spoil  the  code  generated  ocamljs  the  code  generated  ocamljs  depends  function  length  property  for  currying  purpose  occurs  everywhere  code  like  thomaseding  puts  above  for  purpose  enough  remove  the  following  lines  for  scope  scope all function scopes remove unreferenced function args  scope  from  src  com  google  javascript  jscomp remove unused vars  java  cheers keigo this  issue  was  closed  revision  2441</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.RemoveUnusedVars</file>
</fixedfiles>
</bug>
</bugrepository>
