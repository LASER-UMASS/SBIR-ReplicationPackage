<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_176" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-1056.json">
<buginformation>
<summary>initial  type  variable  wrong  when  initialize  var  statement  with  type  declaration</summary>
<description>the  following  code  doesn  give  any  warning  even  though  obvious  bug  constructor  function  class  this  value  class  prototype  show  function  window  console  log  this  value  type  class  var  null  show  however  you  remove  the  type  from  the  var  declaration  then  closure  realizes  the  problem  and  warns  about  being  null  rather  than  object  any  case  since  quot  can  null  quot  closure  should  warn  about  potential  null  pointer  error  and  suggest  guard  against  the  null  value  like  does  try  pass  argument  where  non  null  type  expected  that  could  optional  behavior  protected  behind  flag  but  would  definitely  help  catch  lots  errors  and  write  safer  code  using  the  latest  closure  version  available  date  ubuntu  amd  machine  don  plan  warn  about  potential  null  pointers  wherever  there  nullable  object  type  because  will  give  numerous  spurious  warnings  your  example  the  reason  there  warning  because  when  the  type  the  variable  declared  the  compiler  always  treats  having  that  type  even  can  have  subtype  may  revisit  this  decision  the  future  but  there  specific  plan  the  moment  this  isn  quite  right  isn  always  consider  class  null  while  assignments  are  restricted  subtypes  class  null  the  actual  value  type  the  flow  are  known  while  true  that  general  don  want  warn  about  potential  null  values  there  are  too  many  false  positives  can  and  warn  about  values  that  can  only  null  type  object  var  null  call  produces  jsc  type  mismatch  properties  this  expression  found  null  required  object  line  character  call  has  been  brought  before  initial  type  the  example  currently  wrong  should  declared  class  null  but  its  initial  value  declaration  should  null  the  flow  think  the  reason  did  this  way  because  there  more  general  problem  for  any  expression  type  var  get  there  are  values  where  makes  sense  trust  the  type  annotation  and  there  are  values  where  makes  sense  trust  the  return  type  get  classic  example  where  array  element  and  get  array  can  probably  suggest  fix  for  this  that  will  get  most  the  obvious  cases  but  don  know  how  many  new  warnings  will  raise  posted  fix  here  https  codereview  appspot  com  21440043  there  are  some  comments  there  about  why  this  tricky  there  dumb  fix  that  will  catch  the  most  egregious  problems  and  commented  out  idealistic  fix  this  issue  was  closed  revision aeed 47f 424d  this  issue  was  closed  revision aeed 47f 424d</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.TypeInference</file>
</fixedfiles>
</bug>
</bugrepository>
