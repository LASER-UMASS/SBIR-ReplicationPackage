<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_30" link="https://github.com/FasterXML/jackson-databind/issues/965">
<buginformation>
<summary>big decimal  values  via json type info json sub types  get  rounded</summary>
<description>when using object mapper serialize deserialize class with object field annotated with json sub types type that indicate big decimal looks like the value getting rounded double tried configuring deserialization feature use big decimal for floats but that didn seem help what think valid repro below but let know actually doing something wrong here thanks import org junit test import org junit assert import java math big decimal import com fasterxml jackson annotation import com fasterxml jackson databind deserialization feature import com fasterxml jackson databind object mapper public class jackson test enum type big decimal static class wrapper json ignore type type enum json ignore object value wrapper json getter value type string get type string return type enum name json setter value type void set type string string type this type enum type value type json getter value object value object get value return value json type info use json type info name include json type info external property property type json sub types json sub types type name big decimal value big decimal class json setter value object value private void set value object value this value value test public void test throws exception object mapper new object mapper configure deserialization feature use big decimal for floats true wrapper new wrapper type enum type big decimal value new big decimal 10000000000 0000000001 string json write value string wrapper read value json wrapper class assert assert equals type enum type enum assert assert true string format expected got back value get class get simple name value string value get class get simple name value string value equals value the text was updated successfully but these errors were encountered copy link member cowtowncoder commented oct 2015 not see anything immediately wrong about your handling assume you are observing real bug although can not say for sure why occurs however can speculate why use big decimal for floats does not help all likelihood some part code expects double for some reason and calls and accessor get data double which results coercion and then only later point real type recognized resulting value being brought back big decimal thank you for report hope easy fix copy link member cowtowncoder commented oct 2015 one thing likely cause issue due use polymorphic type external property values need buffered token buffer and perhaps that where number gets coerced unintentionally copy link member cowtowncoder commented oct 2015 yes this becomes much trickier the underlying parser has way knowing whether given floating point number would require decimal representation for full accuracy because this token buffer copies using natural type reported such double use big decimal for floats the other hand not accessible setting for token buffer low level try see there way get relevant setting passed from buffering deserializer however cowtowncoder modified the milestones oct 2015 cowtowncoder closed this 3fc oct 2015 copy link author gmjabs commented oct 2015 thanks for quick fix have workaround until released gmjabs mentioned this issue oct 2015 scale deserialized big decimal are not always the same 632 closed sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ObjectMapper</file>
<file>com.fasterxml.jackson.databind.util.TokenBuffer</file>
</fixedfiles>
</bug>
</bugrepository>
