<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="Closure_30" link="https://storage.googleapis.com/google-code-archive/v2/code.google.com/closure-compiler/issues/issue-698.json">
<buginformation>
<summary>combining  temporary  strings  are  over  optimized  advanced  build</summary>
<description>what  steps  will  reproduce  the  problem  this  bug  only  manifests  itself  large  code  bases  how  large  and  what  the  specifics  are  haven  yet  worked  out  since  the  output  differs  but  the  principle  code sgx color rgba  prototype  hex  function  var hex string  quot  quot  str sgx floor  this  255  string  str  length  str  quot  quot  str hex string  str  str sgx floor  this  255  string  str  length  str  quot  quot  str hex string  str  str sgx floor  this  255  string  str  length  str  quot  quot  str hex string  str  str sgx floor  this  255  string  str  length  str  quot  quot  str hex string  str  return hex string  note  that  str  not  declared  var  what  the  expected  output  what  you  see  instead  see  this sgx color rgba  prototype  function  str  255  this  string  str  length  amp  amp  str  quot  quot  str  str  255  this  string  str  length  amp  amp  str  quot  quot  str  str  255  this  string  str  length  amp  amp  str  quot  quot  str  str  255  this  string  str  length  amp  amp  str  quot  quot  str  return  quot  quot  str  str  str  str  obviously  repeatedly  adding  str  broken  the  final  line  compared  the  original  whatever  aggregating  the  result  seeing  temporary  str  reference  and  combining  guess  str  declared  var  the  problem  goes  away  expect  warning  least  what  version  the  product  are  you  using  what  operating  system  live  http  closure  compiler  appspot  com  please  provide  any  additional  information  below  stand  alone  method  both  var  str  and  str  works  only  when  the  project  hits  certain  undetermined  size  that  fails  entered  your  code  into  the  compiler  but  was  not  able  reproduce  the  issue  are  you  sure  that  the  code  you  using  the  same  code  but  say  the  comments  section  only  happens  when  the  project  hits  certain  undetermined  size  that  fails  haven  determined  how  much  current  kloc  project  need  include  repro  issue  699  appears  have  similar  traits  and  might  connected  honest  question  what  would  you  like  with  this  bug  suppose  fixed  bug  the  compiler  tomorrow  that  looked  similar  would  have  way  testing  this  the  same  bug  because  currently  don  have  enough  information  reproduce  the  issue  and  verify  unclear  what  you  would  like  confused  your  reference  issue  699  which  expected  behavior  and  seems  totally  unrelated  would  you  comfortable  sending  better  repro  steps  over  email  agreed  not  share  the  original  code  with  anyone  two  fold  answer  firstly  note  that  warning  should  probably  visible  that  you  use  string  variable  without  declaring  var  its  result  liable  get  inlined  and  optimised  out  secondly  note  for  storing  the  back  ones  mind  that  anyone  working  the  collapsing  strings  routines  might  spot  something  the  code  base  that  wrong  following  the  bug  would  able  test  that  time  since  can  share  the  whole  code  base  apologies  for  the  699  ref  saw  collapsed  string  and  jumped  the  wrong  conclusion  wrote  those  comments  last  night  but  hadn  hit  send  since  had  chance  prune  down  kloc  below closure compiler  compilation  level  advanced  optimizations  output  file  name  default  formatting  pretty  print closure compiler  constructor sgx color rgba  function  this  undefined  this  undefined  this  undefined  this  undefined sgx color rgba  prototype  hex  function  var hex string  str  math  floor  this  255  string  str  length  str  str hex string  str  str  math  floor  this  255  string  str  length  str  str hex string  str  str  math  floor  this  255  string  str  length  str  str hex string  str  str  math  floor  this  255  string  str  length  str  str hex string  str  return hex string  var  col  new sgx color rgba  alert  col  hex  var  col  new sgx color rgba  alert  col  hex  the  second sgx color rgba  invocation  that  triggers  the  bug  with  only  one  the  crux  str  math  floor  255  string  str  length  str  str  str  with  both  you  get  str  math  floor  255  string  str  length  str  str  note  str  here sgx floor  was  direct  call  math  floor  and  had  change  the  results  hope  this  better  suspect  either  the  variable  inliner  the  variable  name  coalesceing  the  problem  goes  away  you  declare  the  str  variable  locally  var  str  math  floor  this  255  string  guess  within  google  every  undeclared  string  flags  compiler  error  some  passes  assumes  that  always  the  case  doing  binary  search  see  who  fault  but  this  should  work  you  around  the  problem  for  now  alan  feel  free  assign  you  swamped  with  too  much  work  right  now  this  issue  was  closed  revision  1902</description>
</buginformation>
<fixedfiles>
<file>com.google.javascript.jscomp.FlowSensitiveInlineVariables</file>
<file>com.google.javascript.jscomp.MustBeReachingVariableDef</file>
</fixedfiles>
</bug>
</bugrepository>
