<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_43" link="https://github.com/FasterXML/jackson-databind/pull/1150">
<buginformation>
<summary>problem  with  object  handling  explicit  token</summary>
<description>according 742 shouldn throw exception the value the property null according databind 742 shouldn throw exception the 86fa 662 alue the property null cowtowncoder changed the title according databind 742 shouldn throw exception the according 742 string deserializer shouldn throw exception for null mar 2016 copy link member cowtowncoder commented mar 2016 like bit more explanation here well unit test showing what cases should this problem deserializers are typically never called with null tokens caller responsibility handle that for root value handling mapper reader for pojo collection map properties deserializer for that structured type copy link author xavitorrens commented mar 2016 the problem that the json want deserialize has null null text value and defined the bean json identity info generator object generators property generator class property then throws the exception mentioned before fixed with stringify parametrization all the null attributes json are removed before the deserialization anyway don know the best way fix this issue copy link member cowtowncoder commented mar 2016 xavitorrens said without reproducible test case can not help more possible there flaw but would need help knowing where standard default deserializer does not have deal with nulls but sounds like this related object handling which does reorder things and may accidentally exposing nulls not something you should have handle made test for reproduce the case described databind 1150 change 906c 914 string deserializer class copy link author xavitorrens commented mar 2016 made test for reproduce the case described this case course the test pass with problems this branch because the correction has done copy link member cowtowncoder commented mar 2016 thanks think just cut paste branch see what needs done cowtowncoder changed the title according 742 string deserializer shouldn throw exception for null problem with object handling explicit null token mar 2016 cowtowncoder added this the milestone mar 2016 copy link member cowtowncoder commented mar 2016 solved the problem shown right simply just matter moving check bit earlier and based current token instead relying deserializer handle this better that deserializers are not expected handle nulls for simplicity originally but this point just the documented behavior followed all standard deserializers was redesign api might not that way because also prevents deserializers from being able coerce nulls into anything else cowtowncoder closed this 290f mar 2016 copy link author xavitorrens commented mar 2016 thank you very much see your point seems better sign for free join this conversation git hub already have account sign comment reviewers reviews assignees one assigned labels none yet projects none yet milestone linked issues successfully merging this pull request may close these issues none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty</file>
</fixedfiles>
</bug>
</bugrepository>
