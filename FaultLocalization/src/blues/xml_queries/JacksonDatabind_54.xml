<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_54" link="https://github.com/FasterXML/jackson-databind/issues/1256">
<buginformation>
<summary>not  excluded  property  declared  with  type</summary>
<description>edited jackson version here the code object mapper mapper new object mapper mapper set serialization inclusion json include include non absent mapper register module new jdk module json result result new json result result set optional empty result set optional empty system out println mapper write value string result data public class json result private object private optional object then got the output null the real value both the same why the results are different how can avoid null such case the way tried non empty can work but also ignores zero and empty array want keep them the text was updated successfully but these errors were encountered copy link member cowtowncoder commented jun 2016 please use mailing list for usage question issue tracker for reporting bugs cowtowncoder closed this jun 2016 copy link member cowtowncoder commented jun 2016 edited the question however perhaps this bug can say for sure without having closer look what almost certainly comes down with the different declared type use object lacks enough information know that value referential type during serialization construction whether can made work not different question reopening assuming there something fix here thank you for the report cowtowncoder reopened this jun 2016 copy link member cowtowncoder commented jul 2016 this working designed declared type must give indication that the value would reference type like optional and such property declared object will not filtered happens contain referential type future hope support custom inclusion criteria which would allow construction more advanced inclusion filters for now declared type has such that allows determination concept absent will keep this issue open however think whether there possibility that this could improved upon future also noticed that use json serialize optional class does not work expected will file separate bug cowtowncoder mentioned this issue jul 2016 type specialization from object reference type does not work 1290 closed cowtowncoder changed the title confusion with optional empty optional empty not excluded property declared with type object jul 2016 cowtowncoder added this the milestone jul 2016 cowtowncoder closed this 476e jul 2016 copy link member cowtowncoder commented jul 2016 edited fix here two fold first declared type must indicate reference type optional declaration has something like public class json result json serialize optional class important private object private optional object the other part the fix make sure jackson actually uses type modified annotation this was not done but fix will this combination will make tests pass one thing not understand however why non empty would not work here should work without additional type information but could not reproduce that issue test actually works for non empty used sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ser.PropertyBuilder</file>
</fixedfiles>
</bug>
</bugrepository>
