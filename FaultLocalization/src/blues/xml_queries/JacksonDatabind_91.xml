<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_91" link="https://github.com/FasterXML/jackson-databind/issues/1809">
<buginformation>
<summary>deserialization  regression</summary>
<description>there seems regression the latest release using org apache logging log core jackson log json object mapper from org apache logging log log core deserialize the appended json object throwing exception with but worked with org apache logging log core jackson log yaml object mapper and org apache logging log core jackson log xml object mapper fail similar ways input string time millis 1493121664118 thread main thread thread priority level info logger name hello world marker name child parents name parent parents name grandparent message hello world thrown common element count message error message name java lang runtime exception extended stack trace class logtest main method main file main java line exact true location classes version context stack one two logger fqcn org apache logging log spi abstract logger end batch false context map bar bar foo foo source class logtest main method main file main java line exception org apache logging log core parser parse exception com fasterxml jackson databind exc mismatched input exception cannot construct instance org apache logging log level although least one creator exists string argument constructor factory method deserialize from string value info source byte time millis 1493121664118 thread main thread thread priority level info logger name hello world marker name child parents name parent parents name grandparent message hello world thrown common element count message error message name java lang runtime exception extended stack trace clas truncated 482 bytes line column through reference chain org apache logging log core impl log log event level parsing pseudo code import org apache logging log core log event import org apache logging log core parser log event parser import org apache logging log core parser json log event parser import java nio charset standard charsets log event parser parser new json log event parser log event result parser parse from input string get bytes standard charsets utf assert result null the text was updated successfully but these errors were encountered cowtowncoder added the label oct 2017 copy link member cowtowncoder commented oct 2017 that would seem about not detecting single string constructor value static method level class there was change creator detection suspect that would the root cause but one the things there remember correctly had with proper visibility checking wrt creators hope look into this soon breakage obviously not planned and unfortunate for patch release try keep patches non intrusive unfortunately creator detection code rather delicate area figuring out safe fixes challenging copy link member cowtowncoder commented oct 2017 looks like log does have public factory method https logging apache org log log api apidocs org apache logging log level html value java lang string which should detectable think did not but assume this for version this definitely looks like bug hope create stand alone test case verify then fix for copy link author huxi commented oct 2017 yep org apache logging log log core log bit confusing that log and jackson versions match neatly the moment log works with jackson but fails with jackson copy link member cowtowncoder commented oct 2017 huxi heh funny alignment hope resolve this relatively quickly and get patch out within two weeks copy link member cowtowncoder commented oct 2017 also think 1810 either same just closely related copy link member cowtowncoder commented oct 2017 hmmh unfortunately can not reproduce this with simple reproduction adding both constructor and static method chooses constructor this case adding private arg constructor does not block discovery guess the only other possibility wonder about whether jackson parameter name module might use think need reproduction here copy link author huxi commented oct 2017 suppose you mean simpler reproduction than something like this build gradle apply plugin groovy repositories maven central dependencies test compile com fasterxml jackson core jackson databind test compile com fasterxml jackson core jackson annotations test compile org apache logging log log core test compile org codehaus groovy groovy test compile org spockframework spock core groovy exclude group org codehaus groovy module groovy all test compile junit junit src test groovy foo regression spec groovy package foo import java nio charset standard charsets import org apache logging log core log event import org apache logging log core parser json log event parser import org apache logging log core parser log event parser import spock lang specification class regression spec extends specification def deserialization works when log event parser parser new json log event parser log event result parser parse from input string get bytes standard charsets utf then exception thrown result null where input string time millis 1493121664118 thread main thread thread priority level info logger name hello world marker name child parents name parent parents name grandparent message hello world thrown common element count message error message name java lang runtime exception extended stack trace class logtest main method main file main java line exact true location classes version context stack one two logger fqcn org apache logging log spi abstract logger end batch false context map bar bar foo foo source class logtest main method main file main java line trim gradle dependencies output test compile classpath compile classpath for source set test com fasterxml jackson core jackson databind com fasterxml jackson core jackson annotations com fasterxml jackson core jackson core com fasterxml jackson core jackson annotations org apache logging log log core org apache logging log log api org codehaus groovy groovy org spockframework spock core groovy junit junit org hamcrest hamcrest core junit junit one strange thing just saw while implementing this that com fasterxml jackson core jackson databind adds transitive dependency com fasterxml jackson core jackson annotations instead for some reason but upgrading that dependency manually didn fix anything either copy link member cowtowncoder commented oct 2017 edited can start with this thank you annotations dependency intentional there are planned changes across versions and for patch version will dropped from annotations and are identical plus just annotation type definitions anyway copy link member cowtowncoder commented nov 2017 edited wow yes can see how simplifying challenging lots mix ins configuration used avoid having add annotations directly types can get test fail but will need simplify significantly see what going fwtw looks like pertinent mix part here abstract class level mix json creator public static level get level json property name final string name return null and think may actually due mix being wrong and not implementation but that earlier jackson introspection code did not properly handle with this was somehow either taken delegating creator anyway think right intent here use delegating creator and not property based one but annotation indicates property based one verify but fix should either remove json property from name argument and add mode json creator mode delegating would both copy link member cowtowncoder commented nov 2017 yes was able create simplified version for just level and both changes will make behavior work expected think that changes should safe wrt earlier jackson versions well surprised that behavior changed seems should not have worked the way used but the new behavior seems more correct possible and probably likely same problem could exist within other mixins have quick look can see others copy link member cowtowncoder commented nov 2017 did not find others marker mix looked similar but think should use properties based creator unlike level cowtowncoder mentioned this issue nov 2017 update from version breaks apache log 1795 closed cowtowncoder closed this dfaca nov 2017 copy link garydgregory commented nov 2017 thank you for the research will test out the changes you suggest copy link garydgregory commented nov 2017 changed our code log and was then able update jackson thank you all copy link member cowtowncoder commented nov 2017 garydgregory thank you for following this and verifying hypothesis was correct sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.deser.DeserializerCache</file>
</fixedfiles>
</bug>
</bugrepository>
