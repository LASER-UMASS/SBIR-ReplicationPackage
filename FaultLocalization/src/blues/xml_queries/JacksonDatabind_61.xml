<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_61" link="https://github.com/FasterXML/jackson-databind/issues/1395">
<buginformation>
<summary>problems  deserializing  primitive  field  while  using</summary>
<description>edited when running the following test app import com fasterxml jackson annotation json type info import com fasterxml jackson core json factory import com fasterxml jackson databind object mapper import com fasterxml jackson databind serialization feature import com fasterxml jackson databind jsontype impl std type resolver builder import java exception import java util hash map import java util map public class main public static void main string args throws exception create test data data data new data data key map string object map data new hash map map data put long map map data put long field data configure jackson preserve types json factory factory new json factory object mapper mapper new object mapper factory std type resolver builder resolver new std type resolver builder resolver init json type info class null resolver inclusion json type info property resolver type property mapper set default typing resolver mapper enable serialization feature indent output serialize string json mapper write value string map data system out println json json deserialize map deserialized data mapper read value json map class static class data public long key get this output and exception json java util hash map long map java lang long long field com pinkmatter bean serialization main data key java lang long exception thread main com fasterxml jackson databind json mapping exception class java lang long not subtype simple type class long through reference chain java util hash map long field com pinkmatter bean serialization data key com fasterxml jackson databind json mapping exception wrap with path json mapping exception java 379 com fasterxml jackson databind json mapping exception wrap with path json mapping exception java 339 com fasterxml jackson databind deser bean deserializer base wrap and throw bean deserializer base java 1591 com fasterxml jackson databind deser bean deserializer vanilla deserialize bean deserializer java 278 caused java lang illegal argument exception class java lang long not subtype simple type class long com fasterxml jackson databind type type factory construct specialized type type factory java 359 com fasterxml jackson databind jsontype impl class name resolver type from class name resolver java com fasterxml jackson databind jsontype impl class name resolver type from class name resolver java trying serialize bunch basic plain old java objects from libraries are using cannot modify the classes add annotations while also trying preserve the types values collections long map the above example must stay long object the problem that jackson throws the above exception when trying deserialize the primitive public long key the data class change the type public int key then exception thrown and deserialization works also since there are many different types objects and don know compile time exactly what will serialized don think using mix ins will work using jackson the text was updated successfully but these errors were encountered copy link member cowtowncoder commented oct 2016 edited ugh zan quick fix change field type long wrapper type instead primitive long not yet sure how mechanics work here and hope there way handle this but the meantime work around should useful why int works suspect this actually related natural type handling special case along with small number types double boolean and string being others copy link member cowtowncoder commented oct 2016 edited actually this not bug jackson but one usage std type resolver builder problem that you directly use will try add type information for literally every property and while this works for many types does not work for primitives because discrepancy between primitives and wrapper types during reflection processing you look default type resolver builder defined inner class object mapper you can see how inclusion constraining handled you don want change field type you will want add check like base type primitive return null build type serializer and build type deserializer this requires sub classing you might want able just use default type resolver builder cowtowncoder added this the milestone oct 2016 cowtowncoder changed the title deserialize primitive long field while using type resolver builder problems deserializing primitive long field while using type resolver builder oct 2016 cowtowncoder modified the milestones oct 2016 copy link member cowtowncoder commented oct 2016 was able make change that prevents use type info for all primitive types since don see any benefit from allowing alternative would always use type info for matching wrapper suspect this only affects uses like here where std type resolver builder directly used anyway with code should work even without modifications cowtowncoder closed this 82c 346a oct 2016 copy link author antantantan commented oct 2016 cowtowncoder very grateful for your fast solution this issue has held back certain avenue work for some days now will buy you beer ever see you thanks copy link member cowtowncoder commented oct 2016 ugh zan glad service and thank you for reporting this one less bug for anyone stumble upon copy link madhu 147 commented jun 2017 facing similar issue using the jackson databind with date fields could you please help this class java util gregorian calendar not subtype simple type class javax xml datatype xml gregorian calendar copy link member cowtowncoder commented jun 2017 madhu malluri please file separate issue this may may not related and reproduction will needed copy link obroomhall commented jun 2020 this fix breaks use case which field should serialised boxed primitive modify the test given antantantan slightly include some additional annotations including json sub types type annotation the test fails box the serialised value the problem solved reverting this commit have tested and with the reverted commit and can confirm test case passes would possible solve issue without reverting the current fix package com fasterxml jackson databind jsontype import com fasterxml jackson annotation json creator import com fasterxml jackson annotation json property import com fasterxml jackson annotation json sub types import com fasterxml jackson annotation json type info import com fasterxml jackson databind import com fasterxml jackson databind jsontype impl std type resolver builder import org junit ignore import java util databind 1395 prevent attempts including type info for primitives public class default typing with primitives test extends base map test static class data private long key json creator private data json property key long key this key key json type info use json type info class include json type info property property class json sub types type value long class public long key return key ignore public void test default typing with long throws exception data data new data map string object map data new hash map string object map data put long map map data put long field data configure jackson preserve types object mapper mapper new object mapper std type resolver builder resolver new std type resolver builder resolver init json type info class null resolver inclusion json type info property resolver type property mapper set default typing resolver mapper enable serialization feature indent output serialize string json mapper write value string map data deserialize map result mapper read value json map class assert not null result assert equals result size com fasterxml jackson databind exc mismatched input exception unexpected token value number int expected start array need json array contain wrapper array type information for class java lang long source string java util hash map long map java lang long long field com fasterxml jackson databind jsontype default typing with primitives test data key line column through reference chain java util hash map long field com fasterxml jackson databind jsontype default typing with primitives test data key obroomhall mentioned this issue jun 2020 fix 1395 changes behaviour for boxed primitive subtypes 2753 closed sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ObjectMapper</file>
<file>com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder</file>
</fixedfiles>
</bug>
</bugrepository>
