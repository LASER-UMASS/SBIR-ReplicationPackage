<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_21" link="https://github.com/FasterXML/jackson-databind/issues/677">
<buginformation>
<summary>specifying  value  serialization  using</summary>
<description>currently want deserialize enum with value that isn its enum name can either public enum test enum value one value private string value json private test enum string value json this value json value json json creator public static test enum get enum from value string value for test enum test enum values test enum value json equals value return test enum throw new illegal argument exception using deserialization feature read enums using string public enum test enum value one value private string value json private test enum string value json this value json value json override public string string return value json this seems like lot boilerplate there simpler way this similar how gson handles public enum test enum serialized name value value one both more concise and handles both serialization and deserialization the text was updated successfully but these errors were encountered copy link member cowtowncoder commented jan 2015 interesting idea currently there isn but think should able repurpose something for example json property could work ideally try avoid addition new single use annotations copy link author allenchen 1154 commented jan 2015 agreed that repurposing json property would good since matches the annotation description used indicate external property name name used data format copy link member cowtowncoder commented jan 2015 ugh while reasonable idea don know how implement this java enums are nasty kludge under the hood don quite know how locate annotations that hide there doable but not quick fix hoped would fwiw solve for specific app trick override annotation introspector find enum value jackson annotation introspector usually and can probably hard code for specific use only difficult general way copy link author allenchen 1154 commented jan 2015 would something like this work override public string find enum value enum value json property json property annotation value get class get field value name get annotation json property class json property annotation null json property annotation value equals json property use default name return json property annotation value else return value name source for reflection code http stackoverflow com 7260009 copy link member cowtowncoder commented jan 2015 sounds like that could work one issue that accessing annotation directly does not allow processing mix annotations but trying make that work would significant hassle cowtowncoder mentioned this issue may 2015 support for annotating enum values 798 closed cowtowncoder changed the title deserializing enums without json creator specifying enum value serialization using json property jun 2015 copy link member cowtowncoder commented jun 2015 think just might possible use annotated class get mix ins too without tons trouble but think new introspection method override needed annotation introspector not only pass enum value but also associated accessor give access annotations copy link member cowtowncoder commented jun 2015 second thought looking how enums are actually implemented values are static fields the declaring class that type sub type needed that fine far goes except that existing functionality for resolving annotations only deals with member fields and static things only static factory methods are considered defining mix ins for enums might bit inconenient well given all this don see issue with going with allenchen 1154 suggestion cowtowncoder closed this 707db jun 2015 copy link raniz commented jul 2016 this functionality should documented somewhere json property currently there information that can used for this purpose there copy link member cowtowncoder commented jul 2016 raniz appreciate your suggesting this makes sense could you please file new issue for jackson annotations since that where javadocs are due number reports things sometimes fall through the cracks especially comments closed issues over open issues regularly thanks copy link raniz commented jul 2016 done here raniz mentioned this issue jul 2016 parameter names annotation introspector breaks json property for enums faster xml jackson module parameter names closed copy link member cowtowncoder commented jul 2016 thanks cowtowncoder added this the milestone jul 2016 michael chambers mentioned this issue aug 2016 enum map keys not using enum json property values unlike enum values 1322 closed evser mentioned this issue oct 2016 add json property support for enum values springfox springfox 1533 open sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector</file>
</fixedfiles>
</bug>
</bugrepository>
