<?xml version="1.0" encoding="ISO-8859-1"?>
<bugrepository name="Defects4J">
<bug id="JacksonDatabind_85" link="https://github.com/FasterXML/jackson-databind/issues/1648">
<buginformation>
<summary>ignores  configured  date  format  when  creating  contextual</summary>
<description>date time serializer base create contextual creates new serializer with std date format date format str iso 8601 format instead using the actual format that may have been specified the configuration see the following code final string pattern format has pattern format get pattern std date format date format str iso 8601 using the json format annotation field will therefore reset the format jackson default even the annotation doesn specify any custom format date based deserializer create contextual behaves differently and tries use the configured format date format ctxt get config get date format one shortcut with our custom format can simplify handling bit get class std date format class std date format std std date format std std with time zone else otherwise need clone set timezone date format clone set time zone shouldn the serializer follow the same approach the text was updated successfully but these errors were encountered copy link member cowtowncoder commented jun 2017 that sounds like bug would possible create stand alone unit test reproduce the problem that would help verify the fix and guard against future regression cowtowncoder added active and removed labels jun 2017 copy link member cowtowncoder commented jun 2017 yes this definitely looks like problem code should not passing contextual default cowtowncoder added this the milestone jun 2017 cowtowncoder removed active labels jun 2017 cowtowncoder changed the title date time serializer base ignores configured date format when creating contextual date time serializer base ignores configured date format when creating contextual jun 2017 cowtowncoder closed this 93f jun 2017 copy link contributor author brenuart commented jun 2017 edited cowtowncoder maybe should open another issue but here interesting scenario imagine register custom serialiser for java util date means module for instance instead changing the date format itself the mapper mapper register module new simple module add serializer new date serializer boolean false new simple date format yyyy sssxxx now suppose annotate pojo follows public class pojo json format timezone gmt private date date the annotation doesn change the format but only the timezone expect custom format will used won the case unfortunately the handling the annotation such that reverts the format specified the mapper itself and will bypass custom module entirely see what mean copy link member cowtowncoder commented jun 2017 hmmh honest did not design date serializer extensible sub classable its functioning any serendipitous now not against trying make work don see usage necessarily wrong but the better way opinion try use config overrides functionality added allows things like mapper config override date class set format json format value for pattern yyyy and designed work with default handlers don mind your filing separate issue for using date serializer you wish but would recommend using config overrides approach for actual usage better supported and likely more robust approach copy link contributor author brenuart commented jun 2017 try the latter approach short you tell module isn necessary the best option override the behaviour types handled natively jackson which basically the case example how you approach different from object mapper set date format new simple date format copy link member cowtowncoder commented jun 2017 brenuart well use custom serializers should typically the last resort other approaches are not available don work config overrides were added support equivalent couple annotations specifically json include json format but through configuration since jackson itself controls application although custom serializers can easily access these too can take care make things work more reliably together that all use module may still make sense although there real benefit wrt configuring date format may make sense packaging unit for projects now date format that will work with date case and may well what you want use bit more limited just because won work with joda date java date time types problem being that jdk old date format not very good api and can not really reused due multiple reasons joda java but since jackson date support started before explicit support for either those chose just date date format retrospect might have made sense instead just take string pattern and this what json format and config overrides this makes more feasible use general centralized configuration long story short setting date format works nothing wrong with copy link contributor author brenuart commented jun 2017 edited cowtowncoder thanks for the very detailed info for your background had adapt the serialization deserialization java util date slightly for the following reasons make sure dates have their timezone offset serialized with column the format yyyy sssxxx which not the case default the primary reason guarantee interoperability with applications making use java zoned offset date time and also other platforms like java likely send time info with nano second precision joda can handle them drops the extra digits and keep only the millis wanted same behaviour for java util date well provide fix for parsing the zulu dates maybe you find some the reasons interesting enough sign for free join this conversation git hub already have account sign comment assignees one assigned labels none yet projects none yet milestone linked pull requests successfully merging pull request may close this issue none yet participants</description>
</buginformation>
<fixedfiles>
<file>com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase</file>
</fixedfiles>
</bug>
</bugrepository>
